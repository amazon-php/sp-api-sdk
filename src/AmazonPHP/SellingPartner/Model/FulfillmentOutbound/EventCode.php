<?php

declare(strict_types=1);

namespace AmazonPHP\SellingPartner\Model\FulfillmentOutbound;

/**
 * Selling Partner APIs for Fulfillment Outbound.
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 *
 * This class was auto-generated by https://openapi-generator.tech
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh
 */
class EventCode
{
    /**
     * Possible values of this enum.
     */
    final public const _101 = 'EVENT_101';

    final public const _102 = 'EVENT_102';

    final public const _201 = 'EVENT_201';

    final public const _202 = 'EVENT_202';

    final public const _203 = 'EVENT_203';

    final public const _204 = 'EVENT_204';

    final public const _205 = 'EVENT_205';

    final public const _206 = 'EVENT_206';

    final public const _301 = 'EVENT_301';

    final public const _302 = 'EVENT_302';

    final public const _304 = 'EVENT_304';

    final public const _306 = 'EVENT_306';

    final public const _307 = 'EVENT_307';

    final public const _308 = 'EVENT_308';

    final public const _309 = 'EVENT_309';

    final public const _401 = 'EVENT_401';

    final public const _402 = 'EVENT_402';

    final public const _403 = 'EVENT_403';

    final public const _404 = 'EVENT_404';

    final public const _405 = 'EVENT_405';

    final public const _406 = 'EVENT_406';

    final public const _407 = 'EVENT_407';

    final public const _408 = 'EVENT_408';

    final public const _409 = 'EVENT_409';

    final public const _411 = 'EVENT_411';

    final public const _412 = 'EVENT_412';

    final public const _413 = 'EVENT_413';

    final public const _414 = 'EVENT_414';

    final public const _415 = 'EVENT_415';

    final public const _416 = 'EVENT_416';

    final public const _417 = 'EVENT_417';

    final public const _418 = 'EVENT_418';

    final public const _419 = 'EVENT_419';

    public function __construct(private readonly string $value)
    {
    }

    /**
     * Gets allowable values of the enum.
     *
     * @return string[]
     */
    public static function getAllowableEnumValues() : array
    {
        return [
            self::_101,
            self::_102,
            self::_201,
            self::_202,
            self::_203,
            self::_204,
            self::_205,
            self::_206,
            self::_301,
            self::_302,
            self::_304,
            self::_306,
            self::_307,
            self::_308,
            self::_309,
            self::_401,
            self::_402,
            self::_403,
            self::_404,
            self::_405,
            self::_406,
            self::_407,
            self::_408,
            self::_409,
            self::_411,
            self::_412,
            self::_413,
            self::_414,
            self::_415,
            self::_416,
            self::_417,
            self::_418,
            self::_419,
        ];
    }

    public function toString() : string
    {
        return $this->value;
    }
}
