<?php

declare(strict_types=1);


namespace AmazonPHP\SellingPartner\Model\FulfillmentInbound;
use \AmazonPHP\SellingPartner\ObjectSerializer;
use \AmazonPHP\SellingPartner\ModelInterface;
use \AmazonPHP\SellingPartner\Exception\AssertionException;

/**
* Selling Partner API for Fulfillment Inbound
*
* The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
*
* The version of the OpenAPI document: v0
*
* This class was auto-generated by https://openapi-generator.tech
* Do not change it, it will be overwritten with next execution of /bin/generate.sh
 */
class PrepInstruction
{
    /**
     * Possible values of this enum
     */
    const POLYBAGGING = 'Polybagging';

    const BUBBLE_WRAPPING = 'BubbleWrapping';

    const TAPING = 'Taping';

    const BLACK_SHRINK_WRAPPING = 'BlackShrinkWrapping';

    const LABELING = 'Labeling';

    const HANG_GARMENT = 'HangGarment';

    const SET_CREATION = 'SetCreation';

    const BOXING = 'Boxing';

    const REMOVE_FROM_HANGER = 'RemoveFromHanger';

    const DEBUNDLE = 'Debundle';

    const SUFFOCATION_STICKERING = 'SuffocationStickering';

    const CAP_SEALING = 'CapSealing';

    const SET_STICKERING = 'SetStickering';

    const BLANK_STICKERING = 'BlankStickering';

    const SHIPS_IN_PRODUCT_PACKAGING = 'ShipsInProductPackaging';

    const NO_PREP = 'NoPrep';

    private string $value;

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::POLYBAGGING,
            self::BUBBLE_WRAPPING,
            self::TAPING,
            self::BLACK_SHRINK_WRAPPING,
            self::LABELING,
            self::HANG_GARMENT,
            self::SET_CREATION,
            self::BOXING,
            self::REMOVE_FROM_HANGER,
            self::DEBUNDLE,
            self::SUFFOCATION_STICKERING,
            self::CAP_SEALING,
            self::SET_STICKERING,
            self::BLANK_STICKERING,
            self::SHIPS_IN_PRODUCT_PACKAGING,
            self::NO_PREP
        ];
    }

    public function __construct(string $value)
    {
        $this->value = $value;
    }

    public function toString(): string
    {
        return $this->value;
    }
}

