<?php declare(strict_types=1);
/**
 * AttributeSetListType.
 *
 * PHP version 7.4
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Catalog Items.
 *
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace AmazonPHP\SellingPartner\Model\CatalogItemDeprecated;

use AmazonPHP\SellingPartner\ModelInterface;
use AmazonPHP\SellingPartner\ObjectSerializer;

/**
 * This class was auto-generated by https://github.com/OpenAPITools/openapi-generator/.
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh.
 *
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 * @deprecated
 */
class AttributeSetListType implements \ArrayAccess, \JsonSerializable, ModelInterface
{
    public const DISCRIMINATOR = null;

    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static string $openAPIModelName = 'AttributeSetListType';

    /**
     * Array of property to type mappings. Used for (de)serialization.
     *
     * @var string[]
     */
    protected static array $openAPITypes = [
        'actor' => 'string[]',
        'artist' => 'string[]',
        'aspect_ratio' => 'string',
        'audience_rating' => 'string',
        'author' => 'string[]',
        'back_finding' => 'string',
        'band_material_type' => 'string',
        'binding' => 'string',
        'bluray_region' => 'string',
        'brand' => 'string',
        'cero_age_rating' => 'string',
        'chain_type' => 'string',
        'clasp_type' => 'string',
        'color' => 'string',
        'cpu_manufacturer' => 'string',
        'cpu_speed' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'cpu_type' => 'string',
        'creator' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\CreatorType[]',
        'department' => 'string',
        'director' => 'string[]',
        'display_size' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'edition' => 'string',
        'episode_sequence' => 'string',
        'esrb_age_rating' => 'string',
        'feature' => 'string[]',
        'flavor' => 'string',
        'format' => 'string[]',
        'gem_type' => 'string[]',
        'genre' => 'string',
        'golf_club_flex' => 'string',
        'golf_club_loft' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'hand_orientation' => 'string',
        'hard_disk_interface' => 'string',
        'hard_disk_size' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'hardware_platform' => 'string',
        'hazardous_material_type' => 'string',
        'item_dimensions' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DimensionType',
        'is_adult_product' => 'bool',
        'is_autographed' => 'bool',
        'is_eligible_for_trade_in' => 'bool',
        'is_memorabilia' => 'bool',
        'issues_per_year' => 'string',
        'item_part_number' => 'string',
        'label' => 'string',
        'languages' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\LanguageType[]',
        'legal_disclaimer' => 'string',
        'list_price' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\Price',
        'manufacturer' => 'string',
        'manufacturer_maximum_age' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'manufacturer_minimum_age' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'manufacturer_parts_warranty_description' => 'string',
        'material_type' => 'string[]',
        'maximum_resolution' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'media_type' => 'string[]',
        'metal_stamp' => 'string',
        'metal_type' => 'string',
        'model' => 'string',
        'number_of_discs' => 'int',
        'number_of_issues' => 'int',
        'number_of_items' => 'int',
        'number_of_pages' => 'int',
        'number_of_tracks' => 'int',
        'operating_system' => 'string[]',
        'optical_zoom' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'package_dimensions' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DimensionType',
        'package_quantity' => 'int',
        'part_number' => 'string',
        'pegi_rating' => 'string',
        'platform' => 'string[]',
        'processor_count' => 'int',
        'product_group' => 'string',
        'product_type_name' => 'string',
        'product_type_subcategory' => 'string',
        'publication_date' => 'string',
        'publisher' => 'string',
        'region_code' => 'string',
        'release_date' => 'string',
        'ring_size' => 'string',
        'running_time' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'shaft_material' => 'string',
        'scent' => 'string',
        'season_sequence' => 'string',
        'seikodo_product_code' => 'string',
        'size' => 'string',
        'size_per_pearl' => 'string',
        'small_image' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\Image',
        'studio' => 'string',
        'subscription_length' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'system_memory_size' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'system_memory_type' => 'string',
        'theatrical_release_date' => 'string',
        'title' => 'string',
        'total_diamond_weight' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'total_gem_weight' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits',
        'warranty' => 'string',
        'weee_tax_value' => '\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\Price',
    ];

    /**
     * Array of property to format mappings. Used for (de)serialization.
     *
     * @var string[]
     * @phpstan-var array<string, string|null>
     * @psalm-var array<string, string|null>
     */
    protected static array $openAPIFormats = [
        'actor' => null,
        'artist' => null,
        'aspect_ratio' => null,
        'audience_rating' => null,
        'author' => null,
        'back_finding' => null,
        'band_material_type' => null,
        'binding' => null,
        'bluray_region' => null,
        'brand' => null,
        'cero_age_rating' => null,
        'chain_type' => null,
        'clasp_type' => null,
        'color' => null,
        'cpu_manufacturer' => null,
        'cpu_speed' => null,
        'cpu_type' => null,
        'creator' => null,
        'department' => null,
        'director' => null,
        'display_size' => null,
        'edition' => null,
        'episode_sequence' => null,
        'esrb_age_rating' => null,
        'feature' => null,
        'flavor' => null,
        'format' => null,
        'gem_type' => null,
        'genre' => null,
        'golf_club_flex' => null,
        'golf_club_loft' => null,
        'hand_orientation' => null,
        'hard_disk_interface' => null,
        'hard_disk_size' => null,
        'hardware_platform' => null,
        'hazardous_material_type' => null,
        'item_dimensions' => null,
        'is_adult_product' => null,
        'is_autographed' => null,
        'is_eligible_for_trade_in' => null,
        'is_memorabilia' => null,
        'issues_per_year' => null,
        'item_part_number' => null,
        'label' => null,
        'languages' => null,
        'legal_disclaimer' => null,
        'list_price' => null,
        'manufacturer' => null,
        'manufacturer_maximum_age' => null,
        'manufacturer_minimum_age' => null,
        'manufacturer_parts_warranty_description' => null,
        'material_type' => null,
        'maximum_resolution' => null,
        'media_type' => null,
        'metal_stamp' => null,
        'metal_type' => null,
        'model' => null,
        'number_of_discs' => null,
        'number_of_issues' => null,
        'number_of_items' => null,
        'number_of_pages' => null,
        'number_of_tracks' => null,
        'operating_system' => null,
        'optical_zoom' => null,
        'package_dimensions' => null,
        'package_quantity' => null,
        'part_number' => null,
        'pegi_rating' => null,
        'platform' => null,
        'processor_count' => null,
        'product_group' => null,
        'product_type_name' => null,
        'product_type_subcategory' => null,
        'publication_date' => null,
        'publisher' => null,
        'region_code' => null,
        'release_date' => null,
        'ring_size' => null,
        'running_time' => null,
        'shaft_material' => null,
        'scent' => null,
        'season_sequence' => null,
        'seikodo_product_code' => null,
        'size' => null,
        'size_per_pearl' => null,
        'small_image' => null,
        'studio' => null,
        'subscription_length' => null,
        'system_memory_size' => null,
        'system_memory_type' => null,
        'theatrical_release_date' => null,
        'title' => null,
        'total_diamond_weight' => null,
        'total_gem_weight' => null,
        'warranty' => null,
        'weee_tax_value' => null,
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name.
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'actor' => 'Actor',
        'artist' => 'Artist',
        'aspect_ratio' => 'AspectRatio',
        'audience_rating' => 'AudienceRating',
        'author' => 'Author',
        'back_finding' => 'BackFinding',
        'band_material_type' => 'BandMaterialType',
        'binding' => 'Binding',
        'bluray_region' => 'BlurayRegion',
        'brand' => 'Brand',
        'cero_age_rating' => 'CeroAgeRating',
        'chain_type' => 'ChainType',
        'clasp_type' => 'ClaspType',
        'color' => 'Color',
        'cpu_manufacturer' => 'CpuManufacturer',
        'cpu_speed' => 'CpuSpeed',
        'cpu_type' => 'CpuType',
        'creator' => 'Creator',
        'department' => 'Department',
        'director' => 'Director',
        'display_size' => 'DisplaySize',
        'edition' => 'Edition',
        'episode_sequence' => 'EpisodeSequence',
        'esrb_age_rating' => 'EsrbAgeRating',
        'feature' => 'Feature',
        'flavor' => 'Flavor',
        'format' => 'Format',
        'gem_type' => 'GemType',
        'genre' => 'Genre',
        'golf_club_flex' => 'GolfClubFlex',
        'golf_club_loft' => 'GolfClubLoft',
        'hand_orientation' => 'HandOrientation',
        'hard_disk_interface' => 'HardDiskInterface',
        'hard_disk_size' => 'HardDiskSize',
        'hardware_platform' => 'HardwarePlatform',
        'hazardous_material_type' => 'HazardousMaterialType',
        'item_dimensions' => 'ItemDimensions',
        'is_adult_product' => 'IsAdultProduct',
        'is_autographed' => 'IsAutographed',
        'is_eligible_for_trade_in' => 'IsEligibleForTradeIn',
        'is_memorabilia' => 'IsMemorabilia',
        'issues_per_year' => 'IssuesPerYear',
        'item_part_number' => 'ItemPartNumber',
        'label' => 'Label',
        'languages' => 'Languages',
        'legal_disclaimer' => 'LegalDisclaimer',
        'list_price' => 'ListPrice',
        'manufacturer' => 'Manufacturer',
        'manufacturer_maximum_age' => 'ManufacturerMaximumAge',
        'manufacturer_minimum_age' => 'ManufacturerMinimumAge',
        'manufacturer_parts_warranty_description' => 'ManufacturerPartsWarrantyDescription',
        'material_type' => 'MaterialType',
        'maximum_resolution' => 'MaximumResolution',
        'media_type' => 'MediaType',
        'metal_stamp' => 'MetalStamp',
        'metal_type' => 'MetalType',
        'model' => 'Model',
        'number_of_discs' => 'NumberOfDiscs',
        'number_of_issues' => 'NumberOfIssues',
        'number_of_items' => 'NumberOfItems',
        'number_of_pages' => 'NumberOfPages',
        'number_of_tracks' => 'NumberOfTracks',
        'operating_system' => 'OperatingSystem',
        'optical_zoom' => 'OpticalZoom',
        'package_dimensions' => 'PackageDimensions',
        'package_quantity' => 'PackageQuantity',
        'part_number' => 'PartNumber',
        'pegi_rating' => 'PegiRating',
        'platform' => 'Platform',
        'processor_count' => 'ProcessorCount',
        'product_group' => 'ProductGroup',
        'product_type_name' => 'ProductTypeName',
        'product_type_subcategory' => 'ProductTypeSubcategory',
        'publication_date' => 'PublicationDate',
        'publisher' => 'Publisher',
        'region_code' => 'RegionCode',
        'release_date' => 'ReleaseDate',
        'ring_size' => 'RingSize',
        'running_time' => 'RunningTime',
        'shaft_material' => 'ShaftMaterial',
        'scent' => 'Scent',
        'season_sequence' => 'SeasonSequence',
        'seikodo_product_code' => 'SeikodoProductCode',
        'size' => 'Size',
        'size_per_pearl' => 'SizePerPearl',
        'small_image' => 'SmallImage',
        'studio' => 'Studio',
        'subscription_length' => 'SubscriptionLength',
        'system_memory_size' => 'SystemMemorySize',
        'system_memory_type' => 'SystemMemoryType',
        'theatrical_release_date' => 'TheatricalReleaseDate',
        'title' => 'Title',
        'total_diamond_weight' => 'TotalDiamondWeight',
        'total_gem_weight' => 'TotalGemWeight',
        'warranty' => 'Warranty',
        'weee_tax_value' => 'WeeeTaxValue',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses).
     *
     * @var string[]
     */
    protected static array $setters = [
        'actor' => 'setActor',
        'artist' => 'setArtist',
        'aspect_ratio' => 'setAspectRatio',
        'audience_rating' => 'setAudienceRating',
        'author' => 'setAuthor',
        'back_finding' => 'setBackFinding',
        'band_material_type' => 'setBandMaterialType',
        'binding' => 'setBinding',
        'bluray_region' => 'setBlurayRegion',
        'brand' => 'setBrand',
        'cero_age_rating' => 'setCeroAgeRating',
        'chain_type' => 'setChainType',
        'clasp_type' => 'setClaspType',
        'color' => 'setColor',
        'cpu_manufacturer' => 'setCpuManufacturer',
        'cpu_speed' => 'setCpuSpeed',
        'cpu_type' => 'setCpuType',
        'creator' => 'setCreator',
        'department' => 'setDepartment',
        'director' => 'setDirector',
        'display_size' => 'setDisplaySize',
        'edition' => 'setEdition',
        'episode_sequence' => 'setEpisodeSequence',
        'esrb_age_rating' => 'setEsrbAgeRating',
        'feature' => 'setFeature',
        'flavor' => 'setFlavor',
        'format' => 'setFormat',
        'gem_type' => 'setGemType',
        'genre' => 'setGenre',
        'golf_club_flex' => 'setGolfClubFlex',
        'golf_club_loft' => 'setGolfClubLoft',
        'hand_orientation' => 'setHandOrientation',
        'hard_disk_interface' => 'setHardDiskInterface',
        'hard_disk_size' => 'setHardDiskSize',
        'hardware_platform' => 'setHardwarePlatform',
        'hazardous_material_type' => 'setHazardousMaterialType',
        'item_dimensions' => 'setItemDimensions',
        'is_adult_product' => 'setIsAdultProduct',
        'is_autographed' => 'setIsAutographed',
        'is_eligible_for_trade_in' => 'setIsEligibleForTradeIn',
        'is_memorabilia' => 'setIsMemorabilia',
        'issues_per_year' => 'setIssuesPerYear',
        'item_part_number' => 'setItemPartNumber',
        'label' => 'setLabel',
        'languages' => 'setLanguages',
        'legal_disclaimer' => 'setLegalDisclaimer',
        'list_price' => 'setListPrice',
        'manufacturer' => 'setManufacturer',
        'manufacturer_maximum_age' => 'setManufacturerMaximumAge',
        'manufacturer_minimum_age' => 'setManufacturerMinimumAge',
        'manufacturer_parts_warranty_description' => 'setManufacturerPartsWarrantyDescription',
        'material_type' => 'setMaterialType',
        'maximum_resolution' => 'setMaximumResolution',
        'media_type' => 'setMediaType',
        'metal_stamp' => 'setMetalStamp',
        'metal_type' => 'setMetalType',
        'model' => 'setModel',
        'number_of_discs' => 'setNumberOfDiscs',
        'number_of_issues' => 'setNumberOfIssues',
        'number_of_items' => 'setNumberOfItems',
        'number_of_pages' => 'setNumberOfPages',
        'number_of_tracks' => 'setNumberOfTracks',
        'operating_system' => 'setOperatingSystem',
        'optical_zoom' => 'setOpticalZoom',
        'package_dimensions' => 'setPackageDimensions',
        'package_quantity' => 'setPackageQuantity',
        'part_number' => 'setPartNumber',
        'pegi_rating' => 'setPegiRating',
        'platform' => 'setPlatform',
        'processor_count' => 'setProcessorCount',
        'product_group' => 'setProductGroup',
        'product_type_name' => 'setProductTypeName',
        'product_type_subcategory' => 'setProductTypeSubcategory',
        'publication_date' => 'setPublicationDate',
        'publisher' => 'setPublisher',
        'region_code' => 'setRegionCode',
        'release_date' => 'setReleaseDate',
        'ring_size' => 'setRingSize',
        'running_time' => 'setRunningTime',
        'shaft_material' => 'setShaftMaterial',
        'scent' => 'setScent',
        'season_sequence' => 'setSeasonSequence',
        'seikodo_product_code' => 'setSeikodoProductCode',
        'size' => 'setSize',
        'size_per_pearl' => 'setSizePerPearl',
        'small_image' => 'setSmallImage',
        'studio' => 'setStudio',
        'subscription_length' => 'setSubscriptionLength',
        'system_memory_size' => 'setSystemMemorySize',
        'system_memory_type' => 'setSystemMemoryType',
        'theatrical_release_date' => 'setTheatricalReleaseDate',
        'title' => 'setTitle',
        'total_diamond_weight' => 'setTotalDiamondWeight',
        'total_gem_weight' => 'setTotalGemWeight',
        'warranty' => 'setWarranty',
        'weee_tax_value' => 'setWeeeTaxValue',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests).
     *
     * @var string[]
     */
    protected static array $getters = [
        'actor' => 'getActor',
        'artist' => 'getArtist',
        'aspect_ratio' => 'getAspectRatio',
        'audience_rating' => 'getAudienceRating',
        'author' => 'getAuthor',
        'back_finding' => 'getBackFinding',
        'band_material_type' => 'getBandMaterialType',
        'binding' => 'getBinding',
        'bluray_region' => 'getBlurayRegion',
        'brand' => 'getBrand',
        'cero_age_rating' => 'getCeroAgeRating',
        'chain_type' => 'getChainType',
        'clasp_type' => 'getClaspType',
        'color' => 'getColor',
        'cpu_manufacturer' => 'getCpuManufacturer',
        'cpu_speed' => 'getCpuSpeed',
        'cpu_type' => 'getCpuType',
        'creator' => 'getCreator',
        'department' => 'getDepartment',
        'director' => 'getDirector',
        'display_size' => 'getDisplaySize',
        'edition' => 'getEdition',
        'episode_sequence' => 'getEpisodeSequence',
        'esrb_age_rating' => 'getEsrbAgeRating',
        'feature' => 'getFeature',
        'flavor' => 'getFlavor',
        'format' => 'getFormat',
        'gem_type' => 'getGemType',
        'genre' => 'getGenre',
        'golf_club_flex' => 'getGolfClubFlex',
        'golf_club_loft' => 'getGolfClubLoft',
        'hand_orientation' => 'getHandOrientation',
        'hard_disk_interface' => 'getHardDiskInterface',
        'hard_disk_size' => 'getHardDiskSize',
        'hardware_platform' => 'getHardwarePlatform',
        'hazardous_material_type' => 'getHazardousMaterialType',
        'item_dimensions' => 'getItemDimensions',
        'is_adult_product' => 'getIsAdultProduct',
        'is_autographed' => 'getIsAutographed',
        'is_eligible_for_trade_in' => 'getIsEligibleForTradeIn',
        'is_memorabilia' => 'getIsMemorabilia',
        'issues_per_year' => 'getIssuesPerYear',
        'item_part_number' => 'getItemPartNumber',
        'label' => 'getLabel',
        'languages' => 'getLanguages',
        'legal_disclaimer' => 'getLegalDisclaimer',
        'list_price' => 'getListPrice',
        'manufacturer' => 'getManufacturer',
        'manufacturer_maximum_age' => 'getManufacturerMaximumAge',
        'manufacturer_minimum_age' => 'getManufacturerMinimumAge',
        'manufacturer_parts_warranty_description' => 'getManufacturerPartsWarrantyDescription',
        'material_type' => 'getMaterialType',
        'maximum_resolution' => 'getMaximumResolution',
        'media_type' => 'getMediaType',
        'metal_stamp' => 'getMetalStamp',
        'metal_type' => 'getMetalType',
        'model' => 'getModel',
        'number_of_discs' => 'getNumberOfDiscs',
        'number_of_issues' => 'getNumberOfIssues',
        'number_of_items' => 'getNumberOfItems',
        'number_of_pages' => 'getNumberOfPages',
        'number_of_tracks' => 'getNumberOfTracks',
        'operating_system' => 'getOperatingSystem',
        'optical_zoom' => 'getOpticalZoom',
        'package_dimensions' => 'getPackageDimensions',
        'package_quantity' => 'getPackageQuantity',
        'part_number' => 'getPartNumber',
        'pegi_rating' => 'getPegiRating',
        'platform' => 'getPlatform',
        'processor_count' => 'getProcessorCount',
        'product_group' => 'getProductGroup',
        'product_type_name' => 'getProductTypeName',
        'product_type_subcategory' => 'getProductTypeSubcategory',
        'publication_date' => 'getPublicationDate',
        'publisher' => 'getPublisher',
        'region_code' => 'getRegionCode',
        'release_date' => 'getReleaseDate',
        'ring_size' => 'getRingSize',
        'running_time' => 'getRunningTime',
        'shaft_material' => 'getShaftMaterial',
        'scent' => 'getScent',
        'season_sequence' => 'getSeasonSequence',
        'seikodo_product_code' => 'getSeikodoProductCode',
        'size' => 'getSize',
        'size_per_pearl' => 'getSizePerPearl',
        'small_image' => 'getSmallImage',
        'studio' => 'getStudio',
        'subscription_length' => 'getSubscriptionLength',
        'system_memory_size' => 'getSystemMemorySize',
        'system_memory_type' => 'getSystemMemoryType',
        'theatrical_release_date' => 'getTheatricalReleaseDate',
        'title' => 'getTitle',
        'total_diamond_weight' => 'getTotalDiamondWeight',
        'total_gem_weight' => 'getTotalGemWeight',
        'warranty' => 'getWarranty',
        'weee_tax_value' => 'getWeeeTaxValue',
    ];

    /**
     * Associative array for storing property values.
     *
     * @var mixed[]
     */
    protected array $container = [];

    /**
     * Constructor.
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['actor'] = $data['actor'] ?? null;
        $this->container['artist'] = $data['artist'] ?? null;
        $this->container['aspect_ratio'] = $data['aspect_ratio'] ?? null;
        $this->container['audience_rating'] = $data['audience_rating'] ?? null;
        $this->container['author'] = $data['author'] ?? null;
        $this->container['back_finding'] = $data['back_finding'] ?? null;
        $this->container['band_material_type'] = $data['band_material_type'] ?? null;
        $this->container['binding'] = $data['binding'] ?? null;
        $this->container['bluray_region'] = $data['bluray_region'] ?? null;
        $this->container['brand'] = $data['brand'] ?? null;
        $this->container['cero_age_rating'] = $data['cero_age_rating'] ?? null;
        $this->container['chain_type'] = $data['chain_type'] ?? null;
        $this->container['clasp_type'] = $data['clasp_type'] ?? null;
        $this->container['color'] = $data['color'] ?? null;
        $this->container['cpu_manufacturer'] = $data['cpu_manufacturer'] ?? null;
        $this->container['cpu_speed'] = $data['cpu_speed'] ?? null;
        $this->container['cpu_type'] = $data['cpu_type'] ?? null;
        $this->container['creator'] = $data['creator'] ?? null;
        $this->container['department'] = $data['department'] ?? null;
        $this->container['director'] = $data['director'] ?? null;
        $this->container['display_size'] = $data['display_size'] ?? null;
        $this->container['edition'] = $data['edition'] ?? null;
        $this->container['episode_sequence'] = $data['episode_sequence'] ?? null;
        $this->container['esrb_age_rating'] = $data['esrb_age_rating'] ?? null;
        $this->container['feature'] = $data['feature'] ?? null;
        $this->container['flavor'] = $data['flavor'] ?? null;
        $this->container['format'] = $data['format'] ?? null;
        $this->container['gem_type'] = $data['gem_type'] ?? null;
        $this->container['genre'] = $data['genre'] ?? null;
        $this->container['golf_club_flex'] = $data['golf_club_flex'] ?? null;
        $this->container['golf_club_loft'] = $data['golf_club_loft'] ?? null;
        $this->container['hand_orientation'] = $data['hand_orientation'] ?? null;
        $this->container['hard_disk_interface'] = $data['hard_disk_interface'] ?? null;
        $this->container['hard_disk_size'] = $data['hard_disk_size'] ?? null;
        $this->container['hardware_platform'] = $data['hardware_platform'] ?? null;
        $this->container['hazardous_material_type'] = $data['hazardous_material_type'] ?? null;
        $this->container['item_dimensions'] = $data['item_dimensions'] ?? null;
        $this->container['is_adult_product'] = $data['is_adult_product'] ?? null;
        $this->container['is_autographed'] = $data['is_autographed'] ?? null;
        $this->container['is_eligible_for_trade_in'] = $data['is_eligible_for_trade_in'] ?? null;
        $this->container['is_memorabilia'] = $data['is_memorabilia'] ?? null;
        $this->container['issues_per_year'] = $data['issues_per_year'] ?? null;
        $this->container['item_part_number'] = $data['item_part_number'] ?? null;
        $this->container['label'] = $data['label'] ?? null;
        $this->container['languages'] = $data['languages'] ?? null;
        $this->container['legal_disclaimer'] = $data['legal_disclaimer'] ?? null;
        $this->container['list_price'] = $data['list_price'] ?? null;
        $this->container['manufacturer'] = $data['manufacturer'] ?? null;
        $this->container['manufacturer_maximum_age'] = $data['manufacturer_maximum_age'] ?? null;
        $this->container['manufacturer_minimum_age'] = $data['manufacturer_minimum_age'] ?? null;
        $this->container['manufacturer_parts_warranty_description'] = $data['manufacturer_parts_warranty_description'] ?? null;
        $this->container['material_type'] = $data['material_type'] ?? null;
        $this->container['maximum_resolution'] = $data['maximum_resolution'] ?? null;
        $this->container['media_type'] = $data['media_type'] ?? null;
        $this->container['metal_stamp'] = $data['metal_stamp'] ?? null;
        $this->container['metal_type'] = $data['metal_type'] ?? null;
        $this->container['model'] = $data['model'] ?? null;
        $this->container['number_of_discs'] = $data['number_of_discs'] ?? null;
        $this->container['number_of_issues'] = $data['number_of_issues'] ?? null;
        $this->container['number_of_items'] = $data['number_of_items'] ?? null;
        $this->container['number_of_pages'] = $data['number_of_pages'] ?? null;
        $this->container['number_of_tracks'] = $data['number_of_tracks'] ?? null;
        $this->container['operating_system'] = $data['operating_system'] ?? null;
        $this->container['optical_zoom'] = $data['optical_zoom'] ?? null;
        $this->container['package_dimensions'] = $data['package_dimensions'] ?? null;
        $this->container['package_quantity'] = $data['package_quantity'] ?? null;
        $this->container['part_number'] = $data['part_number'] ?? null;
        $this->container['pegi_rating'] = $data['pegi_rating'] ?? null;
        $this->container['platform'] = $data['platform'] ?? null;
        $this->container['processor_count'] = $data['processor_count'] ?? null;
        $this->container['product_group'] = $data['product_group'] ?? null;
        $this->container['product_type_name'] = $data['product_type_name'] ?? null;
        $this->container['product_type_subcategory'] = $data['product_type_subcategory'] ?? null;
        $this->container['publication_date'] = $data['publication_date'] ?? null;
        $this->container['publisher'] = $data['publisher'] ?? null;
        $this->container['region_code'] = $data['region_code'] ?? null;
        $this->container['release_date'] = $data['release_date'] ?? null;
        $this->container['ring_size'] = $data['ring_size'] ?? null;
        $this->container['running_time'] = $data['running_time'] ?? null;
        $this->container['shaft_material'] = $data['shaft_material'] ?? null;
        $this->container['scent'] = $data['scent'] ?? null;
        $this->container['season_sequence'] = $data['season_sequence'] ?? null;
        $this->container['seikodo_product_code'] = $data['seikodo_product_code'] ?? null;
        $this->container['size'] = $data['size'] ?? null;
        $this->container['size_per_pearl'] = $data['size_per_pearl'] ?? null;
        $this->container['small_image'] = $data['small_image'] ?? null;
        $this->container['studio'] = $data['studio'] ?? null;
        $this->container['subscription_length'] = $data['subscription_length'] ?? null;
        $this->container['system_memory_size'] = $data['system_memory_size'] ?? null;
        $this->container['system_memory_type'] = $data['system_memory_type'] ?? null;
        $this->container['theatrical_release_date'] = $data['theatrical_release_date'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['total_diamond_weight'] = $data['total_diamond_weight'] ?? null;
        $this->container['total_gem_weight'] = $data['total_gem_weight'] ?? null;
        $this->container['warranty'] = $data['warranty'] ?? null;
        $this->container['weee_tax_value'] = $data['weee_tax_value'] ?? null;
    }

    /**
     * Array of property to type mappings. Used for (de)serialization.
     *
     * @return string[]
     */
    public static function openAPITypes() : array
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization.
     *
     * @return null[]|string[]
     */
    public static function openAPIFormats() : array
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name.
     *
     * @return string[]
     */
    public static function attributeMap() : array
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses).
     *
     * @return string[]
     */
    public static function setters() : array
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests).
     *
     * @return string[]
     */
    public static function getters() : array
    {
        return self::$getters;
    }

    /**
     * Gets the string presentation of the object.
     */
    public function __toString() : string
    {
        return \json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * The original name of the model.
     */
    public function getModelName() : string
    {
        return self::$openAPIModelName;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties() : array
    {
        return [];
    }

    /**
     * Validate all the properties in the model
     * return true if all passed.
     *
     * @return bool True if all properties are valid
     */
    public function valid() : bool
    {
        return \count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets actor.
     *
     * @return null|string[]
     */
    public function getActor() : ?array
    {
        return $this->container['actor'];
    }

    /**
     * Sets actor.
     *
     * @param null|string[] $actor the actor attributes of the item
     */
    public function setActor(?array $actor) : self
    {
        $this->container['actor'] = $actor;

        return $this;
    }

    /**
     * Gets artist.
     *
     * @return null|string[]
     */
    public function getArtist() : ?array
    {
        return $this->container['artist'];
    }

    /**
     * Sets artist.
     *
     * @param null|string[] $artist the artist attributes of the item
     */
    public function setArtist(?array $artist) : self
    {
        $this->container['artist'] = $artist;

        return $this;
    }

    /**
     * Gets aspect_ratio.
     */
    public function getAspectRatio() : ?string
    {
        return $this->container['aspect_ratio'];
    }

    /**
     * Sets aspect_ratio.
     *
     * @param null|string $aspect_ratio the aspect ratio attribute of the item
     */
    public function setAspectRatio(?string $aspect_ratio) : self
    {
        $this->container['aspect_ratio'] = $aspect_ratio;

        return $this;
    }

    /**
     * Gets audience_rating.
     */
    public function getAudienceRating() : ?string
    {
        return $this->container['audience_rating'];
    }

    /**
     * Sets audience_rating.
     *
     * @param null|string $audience_rating the audience rating attribute of the item
     */
    public function setAudienceRating(?string $audience_rating) : self
    {
        $this->container['audience_rating'] = $audience_rating;

        return $this;
    }

    /**
     * Gets author.
     *
     * @return null|string[]
     */
    public function getAuthor() : ?array
    {
        return $this->container['author'];
    }

    /**
     * Sets author.
     *
     * @param null|string[] $author the author attributes of the item
     */
    public function setAuthor(?array $author) : self
    {
        $this->container['author'] = $author;

        return $this;
    }

    /**
     * Gets back_finding.
     */
    public function getBackFinding() : ?string
    {
        return $this->container['back_finding'];
    }

    /**
     * Sets back_finding.
     *
     * @param null|string $back_finding the back finding attribute of the item
     */
    public function setBackFinding(?string $back_finding) : self
    {
        $this->container['back_finding'] = $back_finding;

        return $this;
    }

    /**
     * Gets band_material_type.
     */
    public function getBandMaterialType() : ?string
    {
        return $this->container['band_material_type'];
    }

    /**
     * Sets band_material_type.
     *
     * @param null|string $band_material_type the band material type attribute of the item
     */
    public function setBandMaterialType(?string $band_material_type) : self
    {
        $this->container['band_material_type'] = $band_material_type;

        return $this;
    }

    /**
     * Gets binding.
     */
    public function getBinding() : ?string
    {
        return $this->container['binding'];
    }

    /**
     * Sets binding.
     *
     * @param null|string $binding the binding attribute of the item
     */
    public function setBinding(?string $binding) : self
    {
        $this->container['binding'] = $binding;

        return $this;
    }

    /**
     * Gets bluray_region.
     */
    public function getBlurayRegion() : ?string
    {
        return $this->container['bluray_region'];
    }

    /**
     * Sets bluray_region.
     *
     * @param null|string $bluray_region the Bluray region attribute of the item
     */
    public function setBlurayRegion(?string $bluray_region) : self
    {
        $this->container['bluray_region'] = $bluray_region;

        return $this;
    }

    /**
     * Gets brand.
     */
    public function getBrand() : ?string
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand.
     *
     * @param null|string $brand the brand attribute of the item
     */
    public function setBrand(?string $brand) : self
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets cero_age_rating.
     */
    public function getCeroAgeRating() : ?string
    {
        return $this->container['cero_age_rating'];
    }

    /**
     * Sets cero_age_rating.
     *
     * @param null|string $cero_age_rating the CERO age rating attribute of the item
     */
    public function setCeroAgeRating(?string $cero_age_rating) : self
    {
        $this->container['cero_age_rating'] = $cero_age_rating;

        return $this;
    }

    /**
     * Gets chain_type.
     */
    public function getChainType() : ?string
    {
        return $this->container['chain_type'];
    }

    /**
     * Sets chain_type.
     *
     * @param null|string $chain_type the chain type attribute of the item
     */
    public function setChainType(?string $chain_type) : self
    {
        $this->container['chain_type'] = $chain_type;

        return $this;
    }

    /**
     * Gets clasp_type.
     */
    public function getClaspType() : ?string
    {
        return $this->container['clasp_type'];
    }

    /**
     * Sets clasp_type.
     *
     * @param null|string $clasp_type the clasp type attribute of the item
     */
    public function setClaspType(?string $clasp_type) : self
    {
        $this->container['clasp_type'] = $clasp_type;

        return $this;
    }

    /**
     * Gets color.
     */
    public function getColor() : ?string
    {
        return $this->container['color'];
    }

    /**
     * Sets color.
     *
     * @param null|string $color the color attribute of the item
     */
    public function setColor(?string $color) : self
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets cpu_manufacturer.
     */
    public function getCpuManufacturer() : ?string
    {
        return $this->container['cpu_manufacturer'];
    }

    /**
     * Sets cpu_manufacturer.
     *
     * @param null|string $cpu_manufacturer the CPU manufacturer attribute of the item
     */
    public function setCpuManufacturer(?string $cpu_manufacturer) : self
    {
        $this->container['cpu_manufacturer'] = $cpu_manufacturer;

        return $this;
    }

    /**
     * Gets cpu_speed.
     */
    public function getCpuSpeed() : ?DecimalWithUnits
    {
        return $this->container['cpu_speed'];
    }

    /**
     * Sets cpu_speed.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $cpu_speed cpu_speed
     */
    public function setCpuSpeed(?DecimalWithUnits $cpu_speed) : self
    {
        $this->container['cpu_speed'] = $cpu_speed;

        return $this;
    }

    /**
     * Gets cpu_type.
     */
    public function getCpuType() : ?string
    {
        return $this->container['cpu_type'];
    }

    /**
     * Sets cpu_type.
     *
     * @param null|string $cpu_type the CPU type attribute of the item
     */
    public function setCpuType(?string $cpu_type) : self
    {
        $this->container['cpu_type'] = $cpu_type;

        return $this;
    }

    /**
     * Gets creator.
     *
     * @return null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\CreatorType[]
     */
    public function getCreator() : ?array
    {
        return $this->container['creator'];
    }

    /**
     * Sets creator.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\CreatorType[] $creator the creator attributes of the item
     */
    public function setCreator(?array $creator) : self
    {
        $this->container['creator'] = $creator;

        return $this;
    }

    /**
     * Gets department.
     */
    public function getDepartment() : ?string
    {
        return $this->container['department'];
    }

    /**
     * Sets department.
     *
     * @param null|string $department the department attribute of the item
     */
    public function setDepartment(?string $department) : self
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets director.
     *
     * @return null|string[]
     */
    public function getDirector() : ?array
    {
        return $this->container['director'];
    }

    /**
     * Sets director.
     *
     * @param null|string[] $director the director attributes of the item
     */
    public function setDirector(?array $director) : self
    {
        $this->container['director'] = $director;

        return $this;
    }

    /**
     * Gets display_size.
     */
    public function getDisplaySize() : ?DecimalWithUnits
    {
        return $this->container['display_size'];
    }

    /**
     * Sets display_size.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $display_size display_size
     */
    public function setDisplaySize(?DecimalWithUnits $display_size) : self
    {
        $this->container['display_size'] = $display_size;

        return $this;
    }

    /**
     * Gets edition.
     */
    public function getEdition() : ?string
    {
        return $this->container['edition'];
    }

    /**
     * Sets edition.
     *
     * @param null|string $edition the edition attribute of the item
     */
    public function setEdition(?string $edition) : self
    {
        $this->container['edition'] = $edition;

        return $this;
    }

    /**
     * Gets episode_sequence.
     */
    public function getEpisodeSequence() : ?string
    {
        return $this->container['episode_sequence'];
    }

    /**
     * Sets episode_sequence.
     *
     * @param null|string $episode_sequence the episode sequence attribute of the item
     */
    public function setEpisodeSequence(?string $episode_sequence) : self
    {
        $this->container['episode_sequence'] = $episode_sequence;

        return $this;
    }

    /**
     * Gets esrb_age_rating.
     */
    public function getEsrbAgeRating() : ?string
    {
        return $this->container['esrb_age_rating'];
    }

    /**
     * Sets esrb_age_rating.
     *
     * @param null|string $esrb_age_rating the ESRB age rating attribute of the item
     */
    public function setEsrbAgeRating(?string $esrb_age_rating) : self
    {
        $this->container['esrb_age_rating'] = $esrb_age_rating;

        return $this;
    }

    /**
     * Gets feature.
     *
     * @return null|string[]
     */
    public function getFeature() : ?array
    {
        return $this->container['feature'];
    }

    /**
     * Sets feature.
     *
     * @param null|string[] $feature The feature attributes of the item
     */
    public function setFeature(?array $feature) : self
    {
        $this->container['feature'] = $feature;

        return $this;
    }

    /**
     * Gets flavor.
     */
    public function getFlavor() : ?string
    {
        return $this->container['flavor'];
    }

    /**
     * Sets flavor.
     *
     * @param null|string $flavor the flavor attribute of the item
     */
    public function setFlavor(?string $flavor) : self
    {
        $this->container['flavor'] = $flavor;

        return $this;
    }

    /**
     * Gets format.
     *
     * @return null|string[]
     */
    public function getFormat() : ?array
    {
        return $this->container['format'];
    }

    /**
     * Sets format.
     *
     * @param null|string[] $format the format attributes of the item
     */
    public function setFormat(?array $format) : self
    {
        $this->container['format'] = $format;

        return $this;
    }

    /**
     * Gets gem_type.
     *
     * @return null|string[]
     */
    public function getGemType() : ?array
    {
        return $this->container['gem_type'];
    }

    /**
     * Sets gem_type.
     *
     * @param null|string[] $gem_type the gem type attributes of the item
     */
    public function setGemType(?array $gem_type) : self
    {
        $this->container['gem_type'] = $gem_type;

        return $this;
    }

    /**
     * Gets genre.
     */
    public function getGenre() : ?string
    {
        return $this->container['genre'];
    }

    /**
     * Sets genre.
     *
     * @param null|string $genre the genre attribute of the item
     */
    public function setGenre(?string $genre) : self
    {
        $this->container['genre'] = $genre;

        return $this;
    }

    /**
     * Gets golf_club_flex.
     */
    public function getGolfClubFlex() : ?string
    {
        return $this->container['golf_club_flex'];
    }

    /**
     * Sets golf_club_flex.
     *
     * @param null|string $golf_club_flex the golf club flex attribute of the item
     */
    public function setGolfClubFlex(?string $golf_club_flex) : self
    {
        $this->container['golf_club_flex'] = $golf_club_flex;

        return $this;
    }

    /**
     * Gets golf_club_loft.
     */
    public function getGolfClubLoft() : ?DecimalWithUnits
    {
        return $this->container['golf_club_loft'];
    }

    /**
     * Sets golf_club_loft.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $golf_club_loft golf_club_loft
     */
    public function setGolfClubLoft(?DecimalWithUnits $golf_club_loft) : self
    {
        $this->container['golf_club_loft'] = $golf_club_loft;

        return $this;
    }

    /**
     * Gets hand_orientation.
     */
    public function getHandOrientation() : ?string
    {
        return $this->container['hand_orientation'];
    }

    /**
     * Sets hand_orientation.
     *
     * @param null|string $hand_orientation the hand orientation attribute of the item
     */
    public function setHandOrientation(?string $hand_orientation) : self
    {
        $this->container['hand_orientation'] = $hand_orientation;

        return $this;
    }

    /**
     * Gets hard_disk_interface.
     */
    public function getHardDiskInterface() : ?string
    {
        return $this->container['hard_disk_interface'];
    }

    /**
     * Sets hard_disk_interface.
     *
     * @param null|string $hard_disk_interface the hard disk interface attribute of the item
     */
    public function setHardDiskInterface(?string $hard_disk_interface) : self
    {
        $this->container['hard_disk_interface'] = $hard_disk_interface;

        return $this;
    }

    /**
     * Gets hard_disk_size.
     */
    public function getHardDiskSize() : ?DecimalWithUnits
    {
        return $this->container['hard_disk_size'];
    }

    /**
     * Sets hard_disk_size.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $hard_disk_size hard_disk_size
     */
    public function setHardDiskSize(?DecimalWithUnits $hard_disk_size) : self
    {
        $this->container['hard_disk_size'] = $hard_disk_size;

        return $this;
    }

    /**
     * Gets hardware_platform.
     */
    public function getHardwarePlatform() : ?string
    {
        return $this->container['hardware_platform'];
    }

    /**
     * Sets hardware_platform.
     *
     * @param null|string $hardware_platform the hardware platform attribute of the item
     */
    public function setHardwarePlatform(?string $hardware_platform) : self
    {
        $this->container['hardware_platform'] = $hardware_platform;

        return $this;
    }

    /**
     * Gets hazardous_material_type.
     */
    public function getHazardousMaterialType() : ?string
    {
        return $this->container['hazardous_material_type'];
    }

    /**
     * Sets hazardous_material_type.
     *
     * @param null|string $hazardous_material_type the hazardous material type attribute of the item
     */
    public function setHazardousMaterialType(?string $hazardous_material_type) : self
    {
        $this->container['hazardous_material_type'] = $hazardous_material_type;

        return $this;
    }

    /**
     * Gets item_dimensions.
     */
    public function getItemDimensions() : ?DimensionType
    {
        return $this->container['item_dimensions'];
    }

    /**
     * Sets item_dimensions.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DimensionType $item_dimensions item_dimensions
     */
    public function setItemDimensions(?DimensionType $item_dimensions) : self
    {
        $this->container['item_dimensions'] = $item_dimensions;

        return $this;
    }

    /**
     * Gets is_adult_product.
     */
    public function getIsAdultProduct() : ?bool
    {
        return $this->container['is_adult_product'];
    }

    /**
     * Sets is_adult_product.
     *
     * @param null|bool $is_adult_product the adult product attribute of the item
     */
    public function setIsAdultProduct(?bool $is_adult_product) : self
    {
        $this->container['is_adult_product'] = $is_adult_product;

        return $this;
    }

    /**
     * Gets is_autographed.
     */
    public function getIsAutographed() : ?bool
    {
        return $this->container['is_autographed'];
    }

    /**
     * Sets is_autographed.
     *
     * @param null|bool $is_autographed the autographed attribute of the item
     */
    public function setIsAutographed(?bool $is_autographed) : self
    {
        $this->container['is_autographed'] = $is_autographed;

        return $this;
    }

    /**
     * Gets is_eligible_for_trade_in.
     */
    public function getIsEligibleForTradeIn() : ?bool
    {
        return $this->container['is_eligible_for_trade_in'];
    }

    /**
     * Sets is_eligible_for_trade_in.
     *
     * @param null|bool $is_eligible_for_trade_in the is eligible for trade in attribute of the item
     */
    public function setIsEligibleForTradeIn(?bool $is_eligible_for_trade_in) : self
    {
        $this->container['is_eligible_for_trade_in'] = $is_eligible_for_trade_in;

        return $this;
    }

    /**
     * Gets is_memorabilia.
     */
    public function getIsMemorabilia() : ?bool
    {
        return $this->container['is_memorabilia'];
    }

    /**
     * Sets is_memorabilia.
     *
     * @param null|bool $is_memorabilia the is memorabilia attribute of the item
     */
    public function setIsMemorabilia(?bool $is_memorabilia) : self
    {
        $this->container['is_memorabilia'] = $is_memorabilia;

        return $this;
    }

    /**
     * Gets issues_per_year.
     */
    public function getIssuesPerYear() : ?string
    {
        return $this->container['issues_per_year'];
    }

    /**
     * Sets issues_per_year.
     *
     * @param null|string $issues_per_year the issues per year attribute of the item
     */
    public function setIssuesPerYear(?string $issues_per_year) : self
    {
        $this->container['issues_per_year'] = $issues_per_year;

        return $this;
    }

    /**
     * Gets item_part_number.
     */
    public function getItemPartNumber() : ?string
    {
        return $this->container['item_part_number'];
    }

    /**
     * Sets item_part_number.
     *
     * @param null|string $item_part_number the item part number attribute of the item
     */
    public function setItemPartNumber(?string $item_part_number) : self
    {
        $this->container['item_part_number'] = $item_part_number;

        return $this;
    }

    /**
     * Gets label.
     */
    public function getLabel() : ?string
    {
        return $this->container['label'];
    }

    /**
     * Sets label.
     *
     * @param null|string $label the label attribute of the item
     */
    public function setLabel(?string $label) : self
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets languages.
     *
     * @return null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\LanguageType[]
     */
    public function getLanguages() : ?array
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\LanguageType[] $languages the languages attribute of the item
     */
    public function setLanguages(?array $languages) : self
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets legal_disclaimer.
     */
    public function getLegalDisclaimer() : ?string
    {
        return $this->container['legal_disclaimer'];
    }

    /**
     * Sets legal_disclaimer.
     *
     * @param null|string $legal_disclaimer the legal disclaimer attribute of the item
     */
    public function setLegalDisclaimer(?string $legal_disclaimer) : self
    {
        $this->container['legal_disclaimer'] = $legal_disclaimer;

        return $this;
    }

    /**
     * Gets list_price.
     */
    public function getListPrice() : ?Price
    {
        return $this->container['list_price'];
    }

    /**
     * Sets list_price.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\Price $list_price list_price
     */
    public function setListPrice(?Price $list_price) : self
    {
        $this->container['list_price'] = $list_price;

        return $this;
    }

    /**
     * Gets manufacturer.
     */
    public function getManufacturer() : ?string
    {
        return $this->container['manufacturer'];
    }

    /**
     * Sets manufacturer.
     *
     * @param null|string $manufacturer the manufacturer attribute of the item
     */
    public function setManufacturer(?string $manufacturer) : self
    {
        $this->container['manufacturer'] = $manufacturer;

        return $this;
    }

    /**
     * Gets manufacturer_maximum_age.
     */
    public function getManufacturerMaximumAge() : ?DecimalWithUnits
    {
        return $this->container['manufacturer_maximum_age'];
    }

    /**
     * Sets manufacturer_maximum_age.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $manufacturer_maximum_age manufacturer_maximum_age
     */
    public function setManufacturerMaximumAge(?DecimalWithUnits $manufacturer_maximum_age) : self
    {
        $this->container['manufacturer_maximum_age'] = $manufacturer_maximum_age;

        return $this;
    }

    /**
     * Gets manufacturer_minimum_age.
     */
    public function getManufacturerMinimumAge() : ?DecimalWithUnits
    {
        return $this->container['manufacturer_minimum_age'];
    }

    /**
     * Sets manufacturer_minimum_age.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $manufacturer_minimum_age manufacturer_minimum_age
     */
    public function setManufacturerMinimumAge(?DecimalWithUnits $manufacturer_minimum_age) : self
    {
        $this->container['manufacturer_minimum_age'] = $manufacturer_minimum_age;

        return $this;
    }

    /**
     * Gets manufacturer_parts_warranty_description.
     */
    public function getManufacturerPartsWarrantyDescription() : ?string
    {
        return $this->container['manufacturer_parts_warranty_description'];
    }

    /**
     * Sets manufacturer_parts_warranty_description.
     *
     * @param null|string $manufacturer_parts_warranty_description the manufacturer parts warranty description attribute of the item
     */
    public function setManufacturerPartsWarrantyDescription(?string $manufacturer_parts_warranty_description) : self
    {
        $this->container['manufacturer_parts_warranty_description'] = $manufacturer_parts_warranty_description;

        return $this;
    }

    /**
     * Gets material_type.
     *
     * @return null|string[]
     */
    public function getMaterialType() : ?array
    {
        return $this->container['material_type'];
    }

    /**
     * Sets material_type.
     *
     * @param null|string[] $material_type the material type attributes of the item
     */
    public function setMaterialType(?array $material_type) : self
    {
        $this->container['material_type'] = $material_type;

        return $this;
    }

    /**
     * Gets maximum_resolution.
     */
    public function getMaximumResolution() : ?DecimalWithUnits
    {
        return $this->container['maximum_resolution'];
    }

    /**
     * Sets maximum_resolution.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $maximum_resolution maximum_resolution
     */
    public function setMaximumResolution(?DecimalWithUnits $maximum_resolution) : self
    {
        $this->container['maximum_resolution'] = $maximum_resolution;

        return $this;
    }

    /**
     * Gets media_type.
     *
     * @return null|string[]
     */
    public function getMediaType() : ?array
    {
        return $this->container['media_type'];
    }

    /**
     * Sets media_type.
     *
     * @param null|string[] $media_type the media type attributes of the item
     */
    public function setMediaType(?array $media_type) : self
    {
        $this->container['media_type'] = $media_type;

        return $this;
    }

    /**
     * Gets metal_stamp.
     */
    public function getMetalStamp() : ?string
    {
        return $this->container['metal_stamp'];
    }

    /**
     * Sets metal_stamp.
     *
     * @param null|string $metal_stamp the metal stamp attribute of the item
     */
    public function setMetalStamp(?string $metal_stamp) : self
    {
        $this->container['metal_stamp'] = $metal_stamp;

        return $this;
    }

    /**
     * Gets metal_type.
     */
    public function getMetalType() : ?string
    {
        return $this->container['metal_type'];
    }

    /**
     * Sets metal_type.
     *
     * @param null|string $metal_type the metal type attribute of the item
     */
    public function setMetalType(?string $metal_type) : self
    {
        $this->container['metal_type'] = $metal_type;

        return $this;
    }

    /**
     * Gets model.
     */
    public function getModel() : ?string
    {
        return $this->container['model'];
    }

    /**
     * Sets model.
     *
     * @param null|string $model the model attribute of the item
     */
    public function setModel(?string $model) : self
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets number_of_discs.
     */
    public function getNumberOfDiscs() : ?int
    {
        return $this->container['number_of_discs'];
    }

    /**
     * Sets number_of_discs.
     *
     * @param null|int $number_of_discs the number of discs attribute of the item
     */
    public function setNumberOfDiscs(?int $number_of_discs) : self
    {
        $this->container['number_of_discs'] = $number_of_discs;

        return $this;
    }

    /**
     * Gets number_of_issues.
     */
    public function getNumberOfIssues() : ?int
    {
        return $this->container['number_of_issues'];
    }

    /**
     * Sets number_of_issues.
     *
     * @param null|int $number_of_issues the number of issues attribute of the item
     */
    public function setNumberOfIssues(?int $number_of_issues) : self
    {
        $this->container['number_of_issues'] = $number_of_issues;

        return $this;
    }

    /**
     * Gets number_of_items.
     */
    public function getNumberOfItems() : ?int
    {
        return $this->container['number_of_items'];
    }

    /**
     * Sets number_of_items.
     *
     * @param null|int $number_of_items the number of items attribute of the item
     */
    public function setNumberOfItems(?int $number_of_items) : self
    {
        $this->container['number_of_items'] = $number_of_items;

        return $this;
    }

    /**
     * Gets number_of_pages.
     */
    public function getNumberOfPages() : ?int
    {
        return $this->container['number_of_pages'];
    }

    /**
     * Sets number_of_pages.
     *
     * @param null|int $number_of_pages the number of pages attribute of the item
     */
    public function setNumberOfPages(?int $number_of_pages) : self
    {
        $this->container['number_of_pages'] = $number_of_pages;

        return $this;
    }

    /**
     * Gets number_of_tracks.
     */
    public function getNumberOfTracks() : ?int
    {
        return $this->container['number_of_tracks'];
    }

    /**
     * Sets number_of_tracks.
     *
     * @param null|int $number_of_tracks the number of tracks attribute of the item
     */
    public function setNumberOfTracks(?int $number_of_tracks) : self
    {
        $this->container['number_of_tracks'] = $number_of_tracks;

        return $this;
    }

    /**
     * Gets operating_system.
     *
     * @return null|string[]
     */
    public function getOperatingSystem() : ?array
    {
        return $this->container['operating_system'];
    }

    /**
     * Sets operating_system.
     *
     * @param null|string[] $operating_system the operating system attributes of the item
     */
    public function setOperatingSystem(?array $operating_system) : self
    {
        $this->container['operating_system'] = $operating_system;

        return $this;
    }

    /**
     * Gets optical_zoom.
     */
    public function getOpticalZoom() : ?DecimalWithUnits
    {
        return $this->container['optical_zoom'];
    }

    /**
     * Sets optical_zoom.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $optical_zoom optical_zoom
     */
    public function setOpticalZoom(?DecimalWithUnits $optical_zoom) : self
    {
        $this->container['optical_zoom'] = $optical_zoom;

        return $this;
    }

    /**
     * Gets package_dimensions.
     */
    public function getPackageDimensions() : ?DimensionType
    {
        return $this->container['package_dimensions'];
    }

    /**
     * Sets package_dimensions.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DimensionType $package_dimensions package_dimensions
     */
    public function setPackageDimensions(?DimensionType $package_dimensions) : self
    {
        $this->container['package_dimensions'] = $package_dimensions;

        return $this;
    }

    /**
     * Gets package_quantity.
     */
    public function getPackageQuantity() : ?int
    {
        return $this->container['package_quantity'];
    }

    /**
     * Sets package_quantity.
     *
     * @param null|int $package_quantity the package quantity attribute of the item
     */
    public function setPackageQuantity(?int $package_quantity) : self
    {
        $this->container['package_quantity'] = $package_quantity;

        return $this;
    }

    /**
     * Gets part_number.
     */
    public function getPartNumber() : ?string
    {
        return $this->container['part_number'];
    }

    /**
     * Sets part_number.
     *
     * @param null|string $part_number the part number attribute of the item
     */
    public function setPartNumber(?string $part_number) : self
    {
        $this->container['part_number'] = $part_number;

        return $this;
    }

    /**
     * Gets pegi_rating.
     */
    public function getPegiRating() : ?string
    {
        return $this->container['pegi_rating'];
    }

    /**
     * Sets pegi_rating.
     *
     * @param null|string $pegi_rating the PEGI rating attribute of the item
     */
    public function setPegiRating(?string $pegi_rating) : self
    {
        $this->container['pegi_rating'] = $pegi_rating;

        return $this;
    }

    /**
     * Gets platform.
     *
     * @return null|string[]
     */
    public function getPlatform() : ?array
    {
        return $this->container['platform'];
    }

    /**
     * Sets platform.
     *
     * @param null|string[] $platform the platform attributes of the item
     */
    public function setPlatform(?array $platform) : self
    {
        $this->container['platform'] = $platform;

        return $this;
    }

    /**
     * Gets processor_count.
     */
    public function getProcessorCount() : ?int
    {
        return $this->container['processor_count'];
    }

    /**
     * Sets processor_count.
     *
     * @param null|int $processor_count the processor count attribute of the item
     */
    public function setProcessorCount(?int $processor_count) : self
    {
        $this->container['processor_count'] = $processor_count;

        return $this;
    }

    /**
     * Gets product_group.
     */
    public function getProductGroup() : ?string
    {
        return $this->container['product_group'];
    }

    /**
     * Sets product_group.
     *
     * @param null|string $product_group the product group attribute of the item
     */
    public function setProductGroup(?string $product_group) : self
    {
        $this->container['product_group'] = $product_group;

        return $this;
    }

    /**
     * Gets product_type_name.
     */
    public function getProductTypeName() : ?string
    {
        return $this->container['product_type_name'];
    }

    /**
     * Sets product_type_name.
     *
     * @param null|string $product_type_name the product type name attribute of the item
     */
    public function setProductTypeName(?string $product_type_name) : self
    {
        $this->container['product_type_name'] = $product_type_name;

        return $this;
    }

    /**
     * Gets product_type_subcategory.
     */
    public function getProductTypeSubcategory() : ?string
    {
        return $this->container['product_type_subcategory'];
    }

    /**
     * Sets product_type_subcategory.
     *
     * @param null|string $product_type_subcategory the product type subcategory attribute of the item
     */
    public function setProductTypeSubcategory(?string $product_type_subcategory) : self
    {
        $this->container['product_type_subcategory'] = $product_type_subcategory;

        return $this;
    }

    /**
     * Gets publication_date.
     */
    public function getPublicationDate() : ?string
    {
        return $this->container['publication_date'];
    }

    /**
     * Sets publication_date.
     *
     * @param null|string $publication_date the publication date attribute of the item
     */
    public function setPublicationDate(?string $publication_date) : self
    {
        $this->container['publication_date'] = $publication_date;

        return $this;
    }

    /**
     * Gets publisher.
     */
    public function getPublisher() : ?string
    {
        return $this->container['publisher'];
    }

    /**
     * Sets publisher.
     *
     * @param null|string $publisher the publisher attribute of the item
     */
    public function setPublisher(?string $publisher) : self
    {
        $this->container['publisher'] = $publisher;

        return $this;
    }

    /**
     * Gets region_code.
     */
    public function getRegionCode() : ?string
    {
        return $this->container['region_code'];
    }

    /**
     * Sets region_code.
     *
     * @param null|string $region_code the region code attribute of the item
     */
    public function setRegionCode(?string $region_code) : self
    {
        $this->container['region_code'] = $region_code;

        return $this;
    }

    /**
     * Gets release_date.
     */
    public function getReleaseDate() : ?string
    {
        return $this->container['release_date'];
    }

    /**
     * Sets release_date.
     *
     * @param null|string $release_date the release date attribute of the item
     */
    public function setReleaseDate(?string $release_date) : self
    {
        $this->container['release_date'] = $release_date;

        return $this;
    }

    /**
     * Gets ring_size.
     */
    public function getRingSize() : ?string
    {
        return $this->container['ring_size'];
    }

    /**
     * Sets ring_size.
     *
     * @param null|string $ring_size the ring size attribute of the item
     */
    public function setRingSize(?string $ring_size) : self
    {
        $this->container['ring_size'] = $ring_size;

        return $this;
    }

    /**
     * Gets running_time.
     */
    public function getRunningTime() : ?DecimalWithUnits
    {
        return $this->container['running_time'];
    }

    /**
     * Sets running_time.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $running_time running_time
     */
    public function setRunningTime(?DecimalWithUnits $running_time) : self
    {
        $this->container['running_time'] = $running_time;

        return $this;
    }

    /**
     * Gets shaft_material.
     */
    public function getShaftMaterial() : ?string
    {
        return $this->container['shaft_material'];
    }

    /**
     * Sets shaft_material.
     *
     * @param null|string $shaft_material the shaft material attribute of the item
     */
    public function setShaftMaterial(?string $shaft_material) : self
    {
        $this->container['shaft_material'] = $shaft_material;

        return $this;
    }

    /**
     * Gets scent.
     */
    public function getScent() : ?string
    {
        return $this->container['scent'];
    }

    /**
     * Sets scent.
     *
     * @param null|string $scent the scent attribute of the item
     */
    public function setScent(?string $scent) : self
    {
        $this->container['scent'] = $scent;

        return $this;
    }

    /**
     * Gets season_sequence.
     */
    public function getSeasonSequence() : ?string
    {
        return $this->container['season_sequence'];
    }

    /**
     * Sets season_sequence.
     *
     * @param null|string $season_sequence the season sequence attribute of the item
     */
    public function setSeasonSequence(?string $season_sequence) : self
    {
        $this->container['season_sequence'] = $season_sequence;

        return $this;
    }

    /**
     * Gets seikodo_product_code.
     */
    public function getSeikodoProductCode() : ?string
    {
        return $this->container['seikodo_product_code'];
    }

    /**
     * Sets seikodo_product_code.
     *
     * @param null|string $seikodo_product_code the Seikodo product code attribute of the item
     */
    public function setSeikodoProductCode(?string $seikodo_product_code) : self
    {
        $this->container['seikodo_product_code'] = $seikodo_product_code;

        return $this;
    }

    /**
     * Gets size.
     */
    public function getSize() : ?string
    {
        return $this->container['size'];
    }

    /**
     * Sets size.
     *
     * @param null|string $size the size attribute of the item
     */
    public function setSize(?string $size) : self
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets size_per_pearl.
     */
    public function getSizePerPearl() : ?string
    {
        return $this->container['size_per_pearl'];
    }

    /**
     * Sets size_per_pearl.
     *
     * @param null|string $size_per_pearl the size per pearl attribute of the item
     */
    public function setSizePerPearl(?string $size_per_pearl) : self
    {
        $this->container['size_per_pearl'] = $size_per_pearl;

        return $this;
    }

    /**
     * Gets small_image.
     */
    public function getSmallImage() : ?Image
    {
        return $this->container['small_image'];
    }

    /**
     * Sets small_image.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\Image $small_image small_image
     */
    public function setSmallImage(?Image $small_image) : self
    {
        $this->container['small_image'] = $small_image;

        return $this;
    }

    /**
     * Gets studio.
     */
    public function getStudio() : ?string
    {
        return $this->container['studio'];
    }

    /**
     * Sets studio.
     *
     * @param null|string $studio the studio attribute of the item
     */
    public function setStudio(?string $studio) : self
    {
        $this->container['studio'] = $studio;

        return $this;
    }

    /**
     * Gets subscription_length.
     */
    public function getSubscriptionLength() : ?DecimalWithUnits
    {
        return $this->container['subscription_length'];
    }

    /**
     * Sets subscription_length.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $subscription_length subscription_length
     */
    public function setSubscriptionLength(?DecimalWithUnits $subscription_length) : self
    {
        $this->container['subscription_length'] = $subscription_length;

        return $this;
    }

    /**
     * Gets system_memory_size.
     */
    public function getSystemMemorySize() : ?DecimalWithUnits
    {
        return $this->container['system_memory_size'];
    }

    /**
     * Sets system_memory_size.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $system_memory_size system_memory_size
     */
    public function setSystemMemorySize(?DecimalWithUnits $system_memory_size) : self
    {
        $this->container['system_memory_size'] = $system_memory_size;

        return $this;
    }

    /**
     * Gets system_memory_type.
     */
    public function getSystemMemoryType() : ?string
    {
        return $this->container['system_memory_type'];
    }

    /**
     * Sets system_memory_type.
     *
     * @param null|string $system_memory_type the system memory type attribute of the item
     */
    public function setSystemMemoryType(?string $system_memory_type) : self
    {
        $this->container['system_memory_type'] = $system_memory_type;

        return $this;
    }

    /**
     * Gets theatrical_release_date.
     */
    public function getTheatricalReleaseDate() : ?string
    {
        return $this->container['theatrical_release_date'];
    }

    /**
     * Sets theatrical_release_date.
     *
     * @param null|string $theatrical_release_date the theatrical release date attribute of the item
     */
    public function setTheatricalReleaseDate(?string $theatrical_release_date) : self
    {
        $this->container['theatrical_release_date'] = $theatrical_release_date;

        return $this;
    }

    /**
     * Gets title.
     */
    public function getTitle() : ?string
    {
        return $this->container['title'];
    }

    /**
     * Sets title.
     *
     * @param null|string $title the title attribute of the item
     */
    public function setTitle(?string $title) : self
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets total_diamond_weight.
     */
    public function getTotalDiamondWeight() : ?DecimalWithUnits
    {
        return $this->container['total_diamond_weight'];
    }

    /**
     * Sets total_diamond_weight.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $total_diamond_weight total_diamond_weight
     */
    public function setTotalDiamondWeight(?DecimalWithUnits $total_diamond_weight) : self
    {
        $this->container['total_diamond_weight'] = $total_diamond_weight;

        return $this;
    }

    /**
     * Gets total_gem_weight.
     */
    public function getTotalGemWeight() : ?DecimalWithUnits
    {
        return $this->container['total_gem_weight'];
    }

    /**
     * Sets total_gem_weight.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\DecimalWithUnits $total_gem_weight total_gem_weight
     */
    public function setTotalGemWeight(?DecimalWithUnits $total_gem_weight) : self
    {
        $this->container['total_gem_weight'] = $total_gem_weight;

        return $this;
    }

    /**
     * Gets warranty.
     */
    public function getWarranty() : ?string
    {
        return $this->container['warranty'];
    }

    /**
     * Sets warranty.
     *
     * @param null|string $warranty the warranty attribute of the item
     */
    public function setWarranty(?string $warranty) : self
    {
        $this->container['warranty'] = $warranty;

        return $this;
    }

    /**
     * Gets weee_tax_value.
     */
    public function getWeeeTaxValue() : ?Price
    {
        return $this->container['weee_tax_value'];
    }

    /**
     * Sets weee_tax_value.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\CatalogItemDeprecated\Price $weee_tax_value weee_tax_value
     */
    public function setWeeeTaxValue(?Price $weee_tax_value) : self
    {
        $this->container['weee_tax_value'] = $weee_tax_value;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     */
    public function offsetExists($offset) : bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return null|mixed
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param null|int $offset Offset
     * @param mixed $value Value to be set
     */
    public function offsetSet($offset, $value) : void
    {
        if (null === $offset) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     */
    public function offsetUnset($offset) : void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     *
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed returns data which can be serialized by json_encode(), which is a value
     *               of any type other than a resource
     */
    public function jsonSerialize() : string
    {
        return \json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR);
    }

    /**
     * Gets a header-safe presentation of the object.
     */
    public function toHeaderValue() : string
    {
        return \json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR);
    }
}
