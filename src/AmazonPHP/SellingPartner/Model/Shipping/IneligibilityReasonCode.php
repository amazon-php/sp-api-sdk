<?php

declare(strict_types=1);


namespace AmazonPHP\SellingPartner\Model\Shipping;
use \AmazonPHP\SellingPartner\ObjectSerializer;
use \AmazonPHP\SellingPartner\ModelInterface;
use \AmazonPHP\SellingPartner\Exception\AssertionException;

/**
* Amazon Shipping API
*
* The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
*
* The version of the OpenAPI document: v2
*
* This class was auto-generated by https://openapi-generator.tech
* Do not change it, it will be overwritten with next execution of /bin/generate.sh
 */
class IneligibilityReasonCode
{
    /**
     * Possible values of this enum
     */
    const NO_COVERAGE = 'NO_COVERAGE';

    const PICKUP_SLOT_RESTRICTION = 'PICKUP_SLOT_RESTRICTION';

    const UNSUPPORTED_VAS = 'UNSUPPORTED_VAS';

    const VAS_COMBINATION_RESTRICTION = 'VAS_COMBINATION_RESTRICTION';

    const SIZE_RESTRICTIONS = 'SIZE_RESTRICTIONS';

    const WEIGHT_RESTRICTIONS = 'WEIGHT_RESTRICTIONS';

    const LATE_DELIVERY = 'LATE_DELIVERY';

    const PROGRAM_CONSTRAINTS = 'PROGRAM_CONSTRAINTS';

    const TERMS_AND_CONDITIONS_NOT_ACCEPTED = 'TERMS_AND_CONDITIONS_NOT_ACCEPTED';

    const UNKNOWN = 'UNKNOWN';

    private string $value;

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NO_COVERAGE,
            self::PICKUP_SLOT_RESTRICTION,
            self::UNSUPPORTED_VAS,
            self::VAS_COMBINATION_RESTRICTION,
            self::SIZE_RESTRICTIONS,
            self::WEIGHT_RESTRICTIONS,
            self::LATE_DELIVERY,
            self::PROGRAM_CONSTRAINTS,
            self::TERMS_AND_CONDITIONS_NOT_ACCEPTED,
            self::UNKNOWN
        ];
    }

    public function __construct(string $value)
    {
        $this->value = $value;
    }

    public function toString(): string
    {
        return $this->value;
    }
}

