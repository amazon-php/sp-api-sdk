<?php declare(strict_types=1);

namespace AmazonPHP\SellingPartner\Api\ReportsApi;

/**
 * This class was auto-generated by https://github.com/OpenAPITools/openapi-generator/.
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh.
 */
interface ReportsSDKInterface
{
    public const API_NAME = 'Reports';

    public const OPERATION_CANCELREPORT = 'cancelReport';

    public const OPERATION_CANCELREPORT_PATH = '/reports/2021-06-30/reports/{reportId}';

    public const OPERATION_CANCELREPORTSCHEDULE = 'cancelReportSchedule';

    public const OPERATION_CANCELREPORTSCHEDULE_PATH = '/reports/2021-06-30/schedules/{reportScheduleId}';

    public const OPERATION_CREATEREPORT = 'createReport';

    public const OPERATION_CREATEREPORT_PATH = '/reports/2021-06-30/reports';

    public const OPERATION_CREATEREPORTSCHEDULE = 'createReportSchedule';

    public const OPERATION_CREATEREPORTSCHEDULE_PATH = '/reports/2021-06-30/schedules';

    public const OPERATION_GETREPORT = 'getReport';

    public const OPERATION_GETREPORT_PATH = '/reports/2021-06-30/reports/{reportId}';

    public const OPERATION_GETREPORTDOCUMENT = 'getReportDocument';

    public const OPERATION_GETREPORTDOCUMENT_PATH = '/reports/2021-06-30/documents/{reportDocumentId}';

    public const OPERATION_GETREPORTSCHEDULE = 'getReportSchedule';

    public const OPERATION_GETREPORTSCHEDULE_PATH = '/reports/2021-06-30/schedules/{reportScheduleId}';

    public const OPERATION_GETREPORTSCHEDULES = 'getReportSchedules';

    public const OPERATION_GETREPORTSCHEDULES_PATH = '/reports/2021-06-30/schedules';

    public const OPERATION_GETREPORTS = 'getReports';

    public const OPERATION_GETREPORTS_PATH = '/reports/2021-06-30/reports';

    /**
     * Operation cancelReport.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_id The identifier for the report. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     */
    public function cancelReport(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_id);

    /**
     * Create request for operation 'cancelReport'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_id The identifier for the report. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function cancelReportRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation cancelReportSchedule.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_schedule_id The identifier for the report schedule. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     */
    public function cancelReportSchedule(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_schedule_id);

    /**
     * Create request for operation 'cancelReportSchedule'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_schedule_id The identifier for the report schedule. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function cancelReportScheduleRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_schedule_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation createReport.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Reports\CreateReportSpecification $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\CreateReportResponse
     */
    public function createReport(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Reports\CreateReportSpecification $body);

    /**
     * Create request for operation 'createReport'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Reports\CreateReportSpecification $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function createReportRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Reports\CreateReportSpecification $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation createReportSchedule.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Reports\CreateReportScheduleSpecification $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\CreateReportScheduleResponse
     */
    public function createReportSchedule(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Reports\CreateReportScheduleSpecification $body);

    /**
     * Create request for operation 'createReportSchedule'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Reports\CreateReportScheduleSpecification $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function createReportScheduleRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Reports\CreateReportScheduleSpecification $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getReport.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_id The identifier for the report. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\Report
     */
    public function getReport(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_id);

    /**
     * Create request for operation 'getReport'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_id The identifier for the report. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getReportRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getReportDocument.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_document_id The identifier for the report document. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\ReportDocument
     */
    public function getReportDocument(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_document_id);

    /**
     * Create request for operation 'getReportDocument'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_document_id The identifier for the report document. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getReportDocumentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_document_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getReportSchedule.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_schedule_id The identifier for the report schedule. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\ReportSchedule
     */
    public function getReportSchedule(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_schedule_id);

    /**
     * Create request for operation 'getReportSchedule'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $report_schedule_id The identifier for the report schedule. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getReportScheduleRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $report_schedule_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getReportSchedules.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string[] $report_types A list of report types used to filter report schedules. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\ReportScheduleList
     */
    public function getReportSchedules(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, array $report_types);

    /**
     * Create request for operation 'getReportSchedules'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string[] $report_types A list of report types used to filter report schedules. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getReportSchedulesRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, array $report_types) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getReports.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string[] $report_types A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required. (optional)
     * @param string[] $processing_statuses A list of processing statuses used to filter reports. (optional)
     * @param string[] $marketplace_ids A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify. (optional)
     * @param int $page_size The maximum number of reports to return in a single call. (optional, default to 10)
     * @param \DateTime $created_since The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days. (optional)
     * @param \DateTime $created_until The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now. (optional)
     * @param string $next_token A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail. (optional)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Reports\GetReportsResponse
     */
    public function getReports(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, array $report_types = null, array $processing_statuses = null, array $marketplace_ids = null, int $page_size = 10, \DateTimeInterface $created_since = null, \DateTimeInterface $created_until = null, string $next_token = null);

    /**
     * Create request for operation 'getReports'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string[] $report_types A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required. (optional)
     * @param string[] $processing_statuses A list of processing statuses used to filter reports. (optional)
     * @param string[] $marketplace_ids A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify. (optional)
     * @param int $page_size The maximum number of reports to return in a single call. (optional, default to 10)
     * @param \DateTime $created_since The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days. (optional)
     * @param \DateTime $created_until The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now. (optional)
     * @param string $next_token A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail. (optional)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getReportsRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, array $report_types = null, array $processing_statuses = null, array $marketplace_ids = null, int $page_size = 10, \DateTimeInterface $created_since = null, \DateTimeInterface $created_until = null, string $next_token = null) : \Psr\Http\Message\RequestInterface;
}
