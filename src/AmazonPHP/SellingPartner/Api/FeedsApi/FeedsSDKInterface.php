<?php declare(strict_types=1);

namespace AmazonPHP\SellingPartner\Api\FeedsApi;

/**
 * This class was auto-generated by https://github.com/OpenAPITools/openapi-generator/.
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh.
 */
interface FeedsSDKInterface
{
    public const API_NAME = 'Feeds';

    public const OPERATION_CANCELFEED = 'cancelFeed';

    public const OPERATION_CANCELFEED_PATH = '/feeds/2021-06-30/feeds/{feedId}';

    public const OPERATION_CREATEFEED = 'createFeed';

    public const OPERATION_CREATEFEED_PATH = '/feeds/2021-06-30/feeds';

    public const OPERATION_CREATEFEEDDOCUMENT = 'createFeedDocument';

    public const OPERATION_CREATEFEEDDOCUMENT_PATH = '/feeds/2021-06-30/documents';

    public const OPERATION_GETFEED = 'getFeed';

    public const OPERATION_GETFEED_PATH = '/feeds/2021-06-30/feeds/{feedId}';

    public const OPERATION_GETFEEDDOCUMENT = 'getFeedDocument';

    public const OPERATION_GETFEEDDOCUMENT_PATH = '/feeds/2021-06-30/documents/{feedDocumentId}';

    public const OPERATION_GETFEEDS = 'getFeeds';

    public const OPERATION_GETFEEDS_PATH = '/feeds/2021-06-30/feeds';

    /**
     * Operation cancelFeed.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $feed_id The identifier for the feed. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     */
    public function cancelFeed(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $feed_id);

    /**
     * Create request for operation 'cancelFeed'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $feed_id The identifier for the feed. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function cancelFeedRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $feed_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation createFeed.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedSpecification $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedResponse
     */
    public function createFeed(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedSpecification $body);

    /**
     * Create request for operation 'createFeed'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedSpecification $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function createFeedRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedSpecification $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation createFeedDocument.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedDocumentSpecification $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedDocumentResponse
     */
    public function createFeedDocument(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedDocumentSpecification $body);

    /**
     * Create request for operation 'createFeedDocument'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedDocumentSpecification $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function createFeedDocumentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Feeds\CreateFeedDocumentSpecification $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getFeed.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $feed_id The identifier for the feed. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Feeds\Feed
     */
    public function getFeed(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $feed_id);

    /**
     * Create request for operation 'getFeed'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $feed_id The identifier for the feed. This identifier is unique only in combination with a seller ID. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getFeedRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $feed_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getFeedDocument.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $feed_document_id The identifier of the feed document. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Feeds\FeedDocument
     */
    public function getFeedDocument(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $feed_document_id);

    /**
     * Create request for operation 'getFeedDocument'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $feed_document_id The identifier of the feed document. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getFeedDocumentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $feed_document_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getFeeds.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string[] $feed_types A list of feed types used to filter feeds. When feedTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either feedTypes or nextToken is required. (optional)
     * @param string[] $marketplace_ids A list of marketplace identifiers used to filter feeds. The feeds returned will match at least one of the marketplaces that you specify. (optional)
     * @param int $page_size The maximum number of feeds to return in a single call. (optional, default to 10)
     * @param string[] $processing_statuses A list of processing statuses used to filter feeds. (optional)
     * @param \DateTime $created_since The earliest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is 90 days ago. Feeds are retained for a maximum of 90 days. (optional)
     * @param \DateTime $created_until The latest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is now. (optional)
     * @param string $next_token A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getFeeds operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail. (optional)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Feeds\GetFeedsResponse
     */
    public function getFeeds(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, array $feed_types = null, array $marketplace_ids = null, int $page_size = 10, array $processing_statuses = null, \DateTimeInterface $created_since = null, \DateTimeInterface $created_until = null, string $next_token = null);

    /**
     * Create request for operation 'getFeeds'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string[] $feed_types A list of feed types used to filter feeds. When feedTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either feedTypes or nextToken is required. (optional)
     * @param string[] $marketplace_ids A list of marketplace identifiers used to filter feeds. The feeds returned will match at least one of the marketplaces that you specify. (optional)
     * @param int $page_size The maximum number of feeds to return in a single call. (optional, default to 10)
     * @param string[] $processing_statuses A list of processing statuses used to filter feeds. (optional)
     * @param \DateTime $created_since The earliest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is 90 days ago. Feeds are retained for a maximum of 90 days. (optional)
     * @param \DateTime $created_until The latest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is now. (optional)
     * @param string $next_token A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getFeeds operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail. (optional)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getFeedsRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, array $feed_types = null, array $marketplace_ids = null, int $page_size = 10, array $processing_statuses = null, \DateTimeInterface $created_since = null, \DateTimeInterface $created_until = null, string $next_token = null) : \Psr\Http\Message\RequestInterface;
}
