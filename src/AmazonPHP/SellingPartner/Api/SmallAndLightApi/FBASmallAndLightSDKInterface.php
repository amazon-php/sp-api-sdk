<?php declare(strict_types=1);

namespace AmazonPHP\SellingPartner\Api\SmallAndLightApi;

/**
 * This class was auto-generated by https://github.com/OpenAPITools/openapi-generator/.
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh.
 */
interface FBASmallAndLightSDKInterface
{
    public const API_NAME = 'FBASmallAndLight';

    public const OPERATION_DELETESMALLANDLIGHTENROLLMENTBYSELLERSKU = 'deleteSmallAndLightEnrollmentBySellerSKU';

    public const OPERATION_DELETESMALLANDLIGHTENROLLMENTBYSELLERSKU_PATH = '/fba/smallAndLight/v1/enrollments/{sellerSKU}';

    public const OPERATION_GETSMALLANDLIGHTELIGIBILITYBYSELLERSKU = 'getSmallAndLightEligibilityBySellerSKU';

    public const OPERATION_GETSMALLANDLIGHTELIGIBILITYBYSELLERSKU_PATH = '/fba/smallAndLight/v1/eligibilities/{sellerSKU}';

    public const OPERATION_GETSMALLANDLIGHTENROLLMENTBYSELLERSKU = 'getSmallAndLightEnrollmentBySellerSKU';

    public const OPERATION_GETSMALLANDLIGHTENROLLMENTBYSELLERSKU_PATH = '/fba/smallAndLight/v1/enrollments/{sellerSKU}';

    public const OPERATION_GETSMALLANDLIGHTFEEPREVIEW = 'getSmallAndLightFeePreview';

    public const OPERATION_GETSMALLANDLIGHTFEEPREVIEW_PATH = '/fba/smallAndLight/v1/feePreviews';

    public const OPERATION_PUTSMALLANDLIGHTENROLLMENTBYSELLERSKU = 'putSmallAndLightEnrollmentBySellerSKU';

    public const OPERATION_PUTSMALLANDLIGHTENROLLMENTBYSELLERSKU_PATH = '/fba/smallAndLight/v1/enrollments/{sellerSKU}';

    /**
     * Operation deleteSmallAndLightEnrollmentBySellerSKU.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace in which to remove the item from the Small and Light program. Note: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     */
    public function deleteSmallAndLightEnrollmentBySellerSKU(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids);

    /**
     * Create request for operation 'deleteSmallAndLightEnrollmentBySellerSKU'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace in which to remove the item from the Small and Light program. Note: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function deleteSmallAndLightEnrollmentBySellerSKURequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getSmallAndLightEligibilityBySellerSKU.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace for which the eligibility status is retrieved. NOTE: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightEligibility
     */
    public function getSmallAndLightEligibilityBySellerSKU(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids);

    /**
     * Create request for operation 'getSmallAndLightEligibilityBySellerSKU'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace for which the eligibility status is retrieved. NOTE: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getSmallAndLightEligibilityBySellerSKURequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getSmallAndLightEnrollmentBySellerSKU.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace for which the enrollment status is retrieved. Note: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightEnrollment
     */
    public function getSmallAndLightEnrollmentBySellerSKU(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids);

    /**
     * Create request for operation 'getSmallAndLightEnrollmentBySellerSKU'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace for which the enrollment status is retrieved. Note: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getSmallAndLightEnrollmentBySellerSKURequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getSmallAndLightFeePreview.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightFeePreviewRequest $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightFeePreviews
     */
    public function getSmallAndLightFeePreview(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightFeePreviewRequest $body);

    /**
     * Create request for operation 'getSmallAndLightFeePreview'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightFeePreviewRequest $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function getSmallAndLightFeePreviewRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightFeePreviewRequest $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation putSmallAndLightEnrollmentBySellerSKU.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace in which to enroll the item. Note: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\FBASmallAndLight\SmallAndLightEnrollment
     */
    public function putSmallAndLightEnrollmentBySellerSKU(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids);

    /**
     * Create request for operation 'putSmallAndLightEnrollmentBySellerSKU'.
     *
     * @param \AmazonPHP\SellingPartner\AccessToken $accessToken
     * @param string $region
     * @param string $seller_sku The seller SKU that identifies the item. (required)
     * @param string[] $marketplace_ids The marketplace in which to enroll the item. Note: Accepts a single marketplace only. (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \Psr\Http\Message\RequestInterface
     */
    public function putSmallAndLightEnrollmentBySellerSKURequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $seller_sku, array $marketplace_ids) : \Psr\Http\Message\RequestInterface;
}
