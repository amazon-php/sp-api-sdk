<?php

namespace AmazonPHP\SellingPartner\Api\VendorShippingLabelsApi;

use AmazonPHP\SellingPartner\AccessToken;
use AmazonPHP\SellingPartner\Exception\ApiException;
use AmazonPHP\SellingPartner\Exception\InvalidArgumentException;
use Psr\Http\Message\RequestInterface;

/**
* Selling Partner API for Direct Fulfillment Shipping
*
* The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
*
* The version of the OpenAPI document: 2021-12-28
*
* This class was auto-generated by https://openapi-generator.tech
* Do not change it, it will be overwritten with next execution of /bin/generate.sh
*/
interface VendorDirectFulfillmentShippingSDKInterface
{
    public const API_NAME = 'VendorDirectFulfillmentShipping';

    public const OPERATION_CREATESHIPPINGLABELS = 'createShippingLabels';

    public const OPERATION_CREATESHIPPINGLABELS_PATH = '/vendor/directFulfillment/shipping/2021-12-28/shippingLabels/{purchaseOrderNumber}';
    public const OPERATION_GETSHIPPINGLABEL = 'getShippingLabel';

    public const OPERATION_GETSHIPPINGLABEL_PATH = '/vendor/directFulfillment/shipping/2021-12-28/shippingLabels/{purchaseOrderNumber}';
    public const OPERATION_GETSHIPPINGLABELS = 'getShippingLabels';

    public const OPERATION_GETSHIPPINGLABELS_PATH = '/vendor/directFulfillment/shipping/2021-12-28/shippingLabels';
    public const OPERATION_SUBMITSHIPPINGLABELREQUEST = 'submitShippingLabelRequest';

    public const OPERATION_SUBMITSHIPPINGLABELREQUEST_PATH = '/vendor/directFulfillment/shipping/2021-12-28/shippingLabels';

    /**
    * Operation createShippingLabels
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $purchase_order_number  The purchase order number for which you want to return the shipping labels. It should be the same purchaseOrderNumber as received in the order. (required)
    * @param \AmazonPHP\SellingPartner\Model\VendorDirectFulfillmentShipping\CreateShippingLabelsRequest $body  body (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\VendorDirectFulfillmentShipping\ShippingLabel
    */
    public function createShippingLabels(AccessToken $accessToken, string $region, $purchase_order_number, $body);
    /**
    * Operation getShippingLabel
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $purchase_order_number  The purchase order number for which you want to return the shipping label. It should be the same purchaseOrderNumber as received in the order. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\VendorDirectFulfillmentShipping\ShippingLabel
    */
    public function getShippingLabel(AccessToken $accessToken, string $region, $purchase_order_number);
    /**
    * Operation getShippingLabels
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \DateTimeInterface $created_after  Shipping labels that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format. (required)
    * @param \DateTimeInterface $created_before  Shipping labels that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format. (required)
    * @param string|null $ship_from_party_id  The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses. (optional)
    * @param int|null $limit  The limit to the number of records returned. (optional)
    * @param string $sort_order  Sort ASC or DESC by order creation date. (optional, default to 'ASC')
    * @param string|null $next_token  Used for pagination when there are more ship labels than the specified result size limit. The token value is returned in the previous API call. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\VendorDirectFulfillmentShipping\ShippingLabelList
    */
    public function getShippingLabels(AccessToken $accessToken, string $region, $created_after, $created_before, $ship_from_party_id = null, $limit = null, $sort_order = 'ASC', $next_token = null);
    /**
    * Operation submitShippingLabelRequest
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\VendorDirectFulfillmentShipping\SubmitShippingLabelsRequest $body  body (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\VendorDirectFulfillmentShipping\TransactionReference
    */
    public function submitShippingLabelRequest(AccessToken $accessToken, string $region, $body);
}
