<?php

namespace AmazonPHP\SellingPartner\Api\ShippingApi;

use AmazonPHP\SellingPartner\AccessToken;
use AmazonPHP\SellingPartner\Exception\ApiException;
use AmazonPHP\SellingPartner\Exception\InvalidArgumentException;
use Psr\Http\Message\RequestInterface;

/**
* Amazon Shipping API
*
* The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
*
* The version of the OpenAPI document: v2
*
* This class was auto-generated by https://openapi-generator.tech
* Do not change it, it will be overwritten with next execution of /bin/generate.sh
*/
interface ShippingSDKInterface
{
    public const API_NAME = 'Shipping';

    public const OPERATION_CANCELSHIPMENT = 'cancelShipment';

    public const OPERATION_CANCELSHIPMENT_PATH = '/shipping/v2/shipments/{shipmentId}/cancel';
    public const OPERATION_DIRECTPURCHASESHIPMENT = 'directPurchaseShipment';

    public const OPERATION_DIRECTPURCHASESHIPMENT_PATH = '/shipping/v2/shipments/directPurchase';
    public const OPERATION_GENERATECOLLECTIONFORM = 'generateCollectionForm';

    public const OPERATION_GENERATECOLLECTIONFORM_PATH = '/shipping/v2/collectionForms';
    public const OPERATION_GETACCESSPOINTS = 'getAccessPoints';

    public const OPERATION_GETACCESSPOINTS_PATH = '/shipping/v2/accessPoints';
    public const OPERATION_GETADDITIONALINPUTS = 'getAdditionalInputs';

    public const OPERATION_GETADDITIONALINPUTS_PATH = '/shipping/v2/shipments/additionalInputs/schema';
    public const OPERATION_GETCARRIERACCOUNTFORMINPUTS = 'getCarrierAccountFormInputs';

    public const OPERATION_GETCARRIERACCOUNTFORMINPUTS_PATH = '/shipping/v2/carrierAccountFormInputs';
    public const OPERATION_GETCARRIERACCOUNTS = 'getCarrierAccounts';

    public const OPERATION_GETCARRIERACCOUNTS_PATH = '/shipping/v2/carrierAccounts';
    public const OPERATION_GETCOLLECTIONFORM = 'getCollectionForm';

    public const OPERATION_GETCOLLECTIONFORM_PATH = '/shipping/v2/collectionForms/{collectionFormId}';
    public const OPERATION_GETCOLLECTIONFORMHISTORY = 'getCollectionFormHistory';

    public const OPERATION_GETCOLLECTIONFORMHISTORY_PATH = '/shipping/v2/collectionForms/history';
    public const OPERATION_GETRATES = 'getRates';

    public const OPERATION_GETRATES_PATH = '/shipping/v2/shipments/rates';
    public const OPERATION_GETSHIPMENTDOCUMENTS = 'getShipmentDocuments';

    public const OPERATION_GETSHIPMENTDOCUMENTS_PATH = '/shipping/v2/shipments/{shipmentId}/documents';
    public const OPERATION_GETTRACKING = 'getTracking';

    public const OPERATION_GETTRACKING_PATH = '/shipping/v2/tracking';
    public const OPERATION_GETUNMANIFESTEDSHIPMENTS = 'getUnmanifestedShipments';

    public const OPERATION_GETUNMANIFESTEDSHIPMENTS_PATH = '/shipping/v2/unmanifestedShipments';
    public const OPERATION_LINKCARRIERACCOUNT = 'linkCarrierAccount';

    public const OPERATION_LINKCARRIERACCOUNT_PATH = '/shipping/v2/carrierAccounts/{carrierId}';
    public const OPERATION_ONECLICKSHIPMENT = 'oneClickShipment';

    public const OPERATION_ONECLICKSHIPMENT_PATH = '/shipping/v2/oneClickShipment';
    public const OPERATION_PURCHASESHIPMENT = 'purchaseShipment';

    public const OPERATION_PURCHASESHIPMENT_PATH = '/shipping/v2/shipments';
    public const OPERATION_UNLINKCARRIERACCOUNT = 'unlinkCarrierAccount';

    public const OPERATION_UNLINKCARRIERACCOUNT_PATH = '/shipping/v2/carrierAccounts/{carrierId}/unlink';

    /**
    * Operation cancelShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $shipment_id  The shipment identifier originally returned by the purchaseShipment operation. (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\CancelShipmentResponse
    */
    public function cancelShipment(AccessToken $accessToken, string $region, $shipment_id, $x_amzn_shipping_business_id = null);
    /**
    * Operation directPurchaseShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\DirectPurchaseRequest $body  body (required)
    * @param string|null $x_amzn_idempotency_key  A unique value which the server uses to recognize subsequent retries of the same request. (optional)
    * @param string|null $locale  The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. (optional)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\DirectPurchaseResponse
    */
    public function directPurchaseShipment(AccessToken $accessToken, string $region, $body, $x_amzn_idempotency_key = null, $locale = null, $x_amzn_shipping_business_id = null);
    /**
    * Operation generateCollectionForm
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\GenerateCollectionFormRequest $body  body (required)
    * @param string|null $x_amzn_idempotency_key  A unique value which the server uses to recognize subsequent retries of the same request. (optional)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GenerateCollectionFormResponse
    */
    public function generateCollectionForm(AccessToken $accessToken, string $region, $body, $x_amzn_idempotency_key = null, $x_amzn_shipping_business_id = null);
    /**
    * Operation getAccessPoints
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string[] $access_point_types  access_point_types (required)
    * @param string $country_code  country_code (required)
    * @param string $postal_code  postal_code (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetAccessPointsResponse
    */
    public function getAccessPoints(AccessToken $accessToken, string $region, $access_point_types, $country_code, $postal_code, $x_amzn_shipping_business_id = null);
    /**
    * Operation getAdditionalInputs
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $request_token  The request token returned in the response to the getRates operation. (required)
    * @param string $rate_id  The rate identifier for the shipping offering (rate) returned in the response to the getRates operation. (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetAdditionalInputsResponse
    */
    public function getAdditionalInputs(AccessToken $accessToken, string $region, $request_token, $rate_id, $x_amzn_shipping_business_id = null);
    /**
    * Operation getCarrierAccountFormInputs
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetCarrierAccountFormInputsResponse
    */
    public function getCarrierAccountFormInputs(AccessToken $accessToken, string $region, $x_amzn_shipping_business_id = null);
    /**
    * Operation getCarrierAccounts
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\GetCarrierAccountsRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetCarrierAccountsResponse
    */
    public function getCarrierAccounts(AccessToken $accessToken, string $region, $body, $x_amzn_shipping_business_id = null);
    /**
    * Operation getCollectionForm
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $collection_form_id  collection form Id to reprint a collection. (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetCollectionFormResponse
    */
    public function getCollectionForm(AccessToken $accessToken, string $region, $collection_form_id, $x_amzn_shipping_business_id = null);
    /**
    * Operation getCollectionFormHistory
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\GetCollectionFormHistoryRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetCollectionFormHistoryResponse
    */
    public function getCollectionFormHistory(AccessToken $accessToken, string $region, $body, $x_amzn_shipping_business_id = null);
    /**
    * Operation getRates
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\GetRatesRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetRatesResponse
    */
    public function getRates(AccessToken $accessToken, string $region, $body, $x_amzn_shipping_business_id = null);
    /**
    * Operation getShipmentDocuments
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $shipment_id  The shipment identifier originally returned by the purchaseShipment operation. (required)
    * @param string $package_client_reference_id  The package client reference identifier originally provided in the request body parameter for the getRates operation. (required)
    * @param string|null $format  The file format of the document. Must be one of the supported formats returned by the getRates operation. (optional)
    * @param float|null $dpi  The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation. (optional)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetShipmentDocumentsResponse
    */
    public function getShipmentDocuments(AccessToken $accessToken, string $region, $shipment_id, $package_client_reference_id, $format = null, $dpi = null, $x_amzn_shipping_business_id = null);
    /**
    * Operation getTracking
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $tracking_id  A carrier-generated tracking identifier originally returned by the purchaseShipment operation. (required)
    * @param string $carrier_id  A carrier identifier originally returned by the getRates operation for the selected rate. (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetTrackingResponse
    */
    public function getTracking(AccessToken $accessToken, string $region, $tracking_id, $carrier_id, $x_amzn_shipping_business_id = null);
    /**
    * Operation getUnmanifestedShipments
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\GetUnmanifestedShipmentsRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\GetUnmanifestedShipmentsResponse
    */
    public function getUnmanifestedShipments(AccessToken $accessToken, string $region, $body, $x_amzn_shipping_business_id = null);
    /**
    * Operation linkCarrierAccount
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $carrier_id  The unique identifier associated with the carrier account. (required)
    * @param \AmazonPHP\SellingPartner\Model\Shipping\LinkCarrierAccountRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\LinkCarrierAccountResponse
    */
    public function linkCarrierAccount(AccessToken $accessToken, string $region, $carrier_id, $body, $x_amzn_shipping_business_id = null);
    /**
    * Operation oneClickShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\OneClickShipmentRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\OneClickShipmentResponse
    */
    public function oneClickShipment(AccessToken $accessToken, string $region, $body, $x_amzn_shipping_business_id = null);
    /**
    * Operation purchaseShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentRequest $body  body (required)
    * @param string|null $x_amzn_idempotency_key  A unique value which the server uses to recognize subsequent retries of the same request. (optional)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentResponse
    */
    public function purchaseShipment(AccessToken $accessToken, string $region, $body, $x_amzn_idempotency_key = null, $x_amzn_shipping_business_id = null);
    /**
    * Operation unlinkCarrierAccount
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $carrier_id  carrier Id to unlink with merchant. (required)
    * @param \AmazonPHP\SellingPartner\Model\Shipping\UnlinkCarrierAccountRequest $body  body (required)
    * @param string|null $x_amzn_shipping_business_id  Amazon shipping business to assume for this request. The default is AmazonShipping_UK. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\Shipping\UnlinkCarrierAccountResponse
    */
    public function unlinkCarrierAccount(AccessToken $accessToken, string $region, $carrier_id, $body, $x_amzn_shipping_business_id = null);
}
