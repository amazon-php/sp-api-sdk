<?php declare(strict_types=1);

namespace AmazonPHP\SellingPartner\Api\ShippingApi;

/**
 * This class was auto-generated by https://github.com/OpenAPITools/openapi-generator/.
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh.
 */
interface ShippingSDKInterface
{
    public const API_NAME = 'Shipping';

    public const OPERATION_CANCELSHIPMENT = 'cancelShipment';

    public const OPERATION_CANCELSHIPMENT_PATH = '/shipping/v1/shipments/{shipmentId}/cancel';

    public const OPERATION_CREATESHIPMENT = 'createShipment';

    public const OPERATION_CREATESHIPMENT_PATH = '/shipping/v1/shipments';

    public const OPERATION_GETACCOUNT = 'getAccount';

    public const OPERATION_GETACCOUNT_PATH = '/shipping/v1/account';

    public const OPERATION_GETRATES = 'getRates';

    public const OPERATION_GETRATES_PATH = '/shipping/v1/rates';

    public const OPERATION_GETSHIPMENT = 'getShipment';

    public const OPERATION_GETSHIPMENT_PATH = '/shipping/v1/shipments/{shipmentId}';

    public const OPERATION_GETTRACKINGINFORMATION = 'getTrackingInformation';

    public const OPERATION_GETTRACKINGINFORMATION_PATH = '/shipping/v1/tracking/{trackingId}';

    public const OPERATION_PURCHASELABELS = 'purchaseLabels';

    public const OPERATION_PURCHASELABELS_PATH = '/shipping/v1/shipments/{shipmentId}/purchaseLabels';

    public const OPERATION_PURCHASESHIPMENT = 'purchaseShipment';

    public const OPERATION_PURCHASESHIPMENT_PATH = '/shipping/v1/purchaseShipment';

    public const OPERATION_RETRIEVESHIPPINGLABEL = 'retrieveShippingLabel';

    public const OPERATION_RETRIEVESHIPPINGLABEL_PATH = '/shipping/v1/shipments/{shipmentId}/containers/{trackingId}/label';

    /**
     * Operation cancelShipment.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id shipment_id (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\CancelShipmentResponse
     */
    public function cancelShipment(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id);

    /**
     * Create request for operation 'cancelShipment'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function cancelShipmentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation createShipment.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Shipping\CreateShipmentRequest $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\CreateShipmentResponse
     */
    public function createShipment(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Shipping\CreateShipmentRequest $body);

    /**
     * Create request for operation 'createShipment'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Shipping\CreateShipmentRequest $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function createShipmentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Shipping\CreateShipmentRequest $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getAccount.
     *
     * @param AccessToken $accessToken
     * @param string $region
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\GetAccountResponse
     */
    public function getAccount(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region);

    /**
     * Create request for operation 'getAccount'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function getAccountRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getRates.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Shipping\GetRatesRequest $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\GetRatesResponse
     */
    public function getRates(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Shipping\GetRatesRequest $body);

    /**
     * Create request for operation 'getRates'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Shipping\GetRatesRequest $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function getRatesRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Shipping\GetRatesRequest $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getShipment.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id shipment_id (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\GetShipmentResponse
     */
    public function getShipment(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id);

    /**
     * Create request for operation 'getShipment'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function getShipmentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation getTrackingInformation.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $tracking_id tracking_id (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\GetTrackingInformationResponse
     */
    public function getTrackingInformation(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $tracking_id);

    /**
     * Create request for operation 'getTrackingInformation'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $tracking_id (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function getTrackingInformationRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $tracking_id) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation purchaseLabels.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id shipment_id (required)
     * @param \AmazonPHP\SellingPartner\Model\Shipping\PurchaseLabelsRequest $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\PurchaseLabelsResponse
     */
    public function purchaseLabels(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id, \AmazonPHP\SellingPartner\Model\Shipping\PurchaseLabelsRequest $body);

    /**
     * Create request for operation 'purchaseLabels'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id (required)
     * @param \AmazonPHP\SellingPartner\Model\Shipping\PurchaseLabelsRequest $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function purchaseLabelsRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id, \AmazonPHP\SellingPartner\Model\Shipping\PurchaseLabelsRequest $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation purchaseShipment.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentRequest $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentResponse
     */
    public function purchaseShipment(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentRequest $body);

    /**
     * Create request for operation 'purchaseShipment'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentRequest $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function purchaseShipmentRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, \AmazonPHP\SellingPartner\Model\Shipping\PurchaseShipmentRequest $body) : \Psr\Http\Message\RequestInterface;

    /**
     * Operation retrieveShippingLabel.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id shipment_id (required)
     * @param string $tracking_id tracking_id (required)
     * @param \AmazonPHP\SellingPartner\Model\Shipping\RetrieveShippingLabelRequest $body body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\ApiException on non-2xx response
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return \AmazonPHP\SellingPartner\Model\Shipping\RetrieveShippingLabelResponse
     */
    public function retrieveShippingLabel(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id, string $tracking_id, \AmazonPHP\SellingPartner\Model\Shipping\RetrieveShippingLabelRequest $body);

    /**
     * Create request for operation 'retrieveShippingLabel'.
     *
     * @param AccessToken $accessToken
     * @param string $region
     * @param string $shipment_id (required)
     * @param string $tracking_id (required)
     * @param \AmazonPHP\SellingPartner\Model\Shipping\RetrieveShippingLabelRequest $body (required)
     *
     * @throws \AmazonPHP\SellingPartner\Exception\InvalidArgumentException
     *
     * @return RequestInterface
     */
    public function retrieveShippingLabelRequest(\AmazonPHP\SellingPartner\AccessToken $accessToken, string $region, string $shipment_id, string $tracking_id, \AmazonPHP\SellingPartner\Model\Shipping\RetrieveShippingLabelRequest $body) : \Psr\Http\Message\RequestInterface;
}
